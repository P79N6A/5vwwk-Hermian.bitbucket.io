{"name":"@octokit/endpoint","description":"Turns REST API endpoints into generic request options","version":"5.1.1","license":"MIT","files":["dist-*/","bin/"],"source":"dist-src/index.js","types":"dist-types/index.d.ts","main":"dist-node/index.js","module":"dist-web/index.js","unpkg":"dist-web/index.bundled.js","pika":true,"sideEffects":false,"keywords":["octokit","github","api","rest"],"homepage":"https://github.com/octokit/endpoint.js#readme","bugs":{"url":"https://github.com/octokit/endpoint.js/issues"},"repository":{"type":"git","url":"git+https://github.com/octokit/endpoint.js.git"},"dependencies":{"deepmerge":"3.2.0","is-plain-object":"^3.0.0","universal-user-agent":"^2.0.1","url-template":"^2.0.8"},"devDependencies":{"@octokit/routes":"20.2.2","@pika/pack":"^0.3.7","@pika/plugin-build-node":"^0.3.16","@pika/plugin-build-web":"^0.3.16","@pika/plugin-bundle-web":"file:./patches/@pika/plugin-bundle-web","@pika/plugin-ts-standard-pkg":"^0.3.16","@types/jest":"^24.0.11","@types/url-template":"^2.0.28","glob":"^7.1.3","handlebars":"^4.1.2","jest":"^24.7.1","lodash.set":"^4.3.2","nyc":"^14.0.0","pascal-case":"^2.0.1","pika-plugin-unpkg-field":"^1.1.0","prettier":"1.17.0","rollup-plugin-commonjs":"^9.3.4","rollup-plugin-json":"^4.0.0","rollup-plugin-node-resolve":"^4.2.3","semantic-release":"^15.13.8","semantic-release-plugin-update-version-in-files":"^1.0.0","string-to-jsdoc-comment":"^1.0.0","ts-jest":"^24.0.2","typescript":"^3.4.5"},"publishConfig":{"access":"public","tag":"latest"},"readme":"# endpoint.js\n\n> Turns GitHub REST API endpoints into generic request options\n\n[![@latest](https://img.shields.io/npm/v/@octokit/endpoint.svg)](https://www.npmjs.com/package/@octokit/endpoint)\n[![Build Status](https://travis-ci.org/octokit/endpoint.js.svg?branch=master)](https://travis-ci.org/octokit/endpoint.js)\n[![Greenkeeper](https://badges.greenkeeper.io/octokit/endpoint.js.svg)](https://greenkeeper.io/)\n\n`@octokit/endpoint` combines [GitHub REST API routes](https://developer.github.com/v3/) with your parameters and turns them into generic request options that can be used in any request library.\n\n<!-- update table of contents by running `npx markdown-toc README.md -i` -->\n<!-- toc -->\n\n- [Usage](#usage)\n- [API](#api)\n  - [endpoint()](#endpoint)\n  - [endpoint.defaults()](#endpointdefaults)\n  - [endpoint.DEFAULTS](#endpointdefaults)\n  - [endpoint.merge()](#endpointmerge)\n  - [endpoint.parse()](#endpointparse)\n- [Special cases](#special-cases)\n  - [The `data` parameter – set request body directly](#the-data-parameter-%E2%80%93-set-request-body-directly)\n  - [Set parameters for both the URL/query and the request body](#set-parameters-for-both-the-urlquery-and-the-request-body)\n- [LICENSE](#license)\n\n<!-- tocstop -->\n\n## Usage\n\n<table>\n<tbody valign=top align=left>\n<tr><th>\nBrowsers\n</th><td width=100%>\nLoad <code>@octokit/endpoint</code> directly from <a href=\"https://unpkg.com\">unpkg.com</a>\n        \n```html\n<script type=\"module\">\nimport { endpoint } from \"https://unpkg.com/@octokit/endpoint\";\n</script>\n```\n\n</td></tr>\n<tr><th>\nNode\n</th><td>\n\nInstall with <code>npm install @octokit/endpoint</code>\n\n```js\nconst { endpoint } = require(\"@octokit/endpoint\");\n// or: import { endpoint } from \"@octokit/endpoint\";\n```\n\n</td></tr>\n</tbody>\n</table>\n\nExample for [List organization repositories](https://developer.github.com/v3/repos/#list-organization-repositories)\n\n```js\nconst requestOptions = endpoint(\"GET /orgs/:org/repos\", {\n  headers: {\n    authorization: \"token 0000000000000000000000000000000000000001\"\n  },\n  org: \"octokit\",\n  type: \"private\"\n});\n```\n\nThe resulting `requestOptions` looks as follows\n\n```json\n{\n  \"method\": \"GET\",\n  \"url\": \"https://api.github.com/orgs/octokit/repos?type=private\",\n  \"headers\": {\n    \"accept\": \"application/vnd.github.v3+json\",\n    \"authorization\": \"token 0000000000000000000000000000000000000001\",\n    \"user-agent\": \"octokit/endpoint.js v1.2.3\"\n  }\n}\n```\n\nYou can pass `requestOptions` to commen request libraries\n\n```js\nconst { url, ...options } = requestOptions;\n// using with fetch (https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\nfetch(url, options);\n// using with request (https://github.com/request/request)\nrequest(requestOptions);\n// using with got (https://github.com/sindresorhus/got)\ngot[options.method](url, options);\n// using with axios\naxios(requestOptions);\n```\n\n## API\n\n### `endpoint(route, options)` or `endpoint(options)`\n\n<table>\n  <thead align=left>\n    <tr>\n      <th>\n        name\n      </th>\n      <th>\n        type\n      </th>\n      <th width=100%>\n        description\n      </th>\n    </tr>\n  </thead>\n  <tbody align=left valign=top>\n    <tr>\n      <th>\n        <code>route</code>\n      </th>\n      <td>\n        String\n      </td>\n      <td>\n        If set, it has to be a string consisting of URL and the request method, e.g., <code>GET /orgs/:org</code>. If it’s set to a URL, only the method defaults to <code>GET</code>.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.method</code>\n      </th>\n      <td>\n        String\n      </td>\n      <td>\n        <strong>Required unless <code>route</code> is set.</strong> Any supported <a href=\"https://developer.github.com/v3/#http-verbs\">http verb</a>. <em>Defaults to <code>GET</code></em>.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.url</code>\n      </th>\n      <td>\n        String\n      </td>\n      <td>\n        <strong>Required unless <code>route</code> is set.</strong> A path or full URL which may contain <code>:variable</code> or <code>{variable}</code> placeholders,\n        e.g., <code>/orgs/:org/repos</code>. The <code>url</code> is parsed using <a href=\"https://github.com/bramstein/url-template\">url-template</a>.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.baseUrl</code>\n      </th>\n      <td>\n        String\n      </td>\n      <td>\n        <em>Defaults to <code>https://api.github.com</code></em>.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.headers</code>\n      </th>\n      <td>\n        Object\n      </td>\n      <td>\n        Custom headers. Passed headers are merged with defaults:<br>\n        <em><code>headers['user-agent']</code> defaults to <code>octokit-endpoint.js/1.2.3</code> (where <code>1.2.3</code> is the released version)</em>.<br>\n        <em><code>headers['accept']</code> defaults to <code>application/vnd.github.v3+json</code></em>.<br>\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.mediaType.format</code>\n      </th>\n      <td>\n        String\n      </td>\n      <td>\n        Media type param, such as <code>raw</code>, <code>diff</code>, or <code>text+json</code>. See <a href=\"https://developer.github.com/v3/media/\">Media Types</a>. Setting <code>options.mediaType.format</code> will amend the <code>headers.accept</code> value.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.mediaType.previews</code>\n      </th>\n      <td>\n        Array of Strings\n      </td>\n      <td>\n        Name of previews, such as <code>mercy</code>, <code>symmetra</code>, or <code>scarlet-witch</code>. See <a href=\"https://developer.github.com/v3/previews/\">API Previews</a>. If <code>options.mediaType.previews</code> was set as default, the new previews will be merged into the default ones. Setting <code>options.mediaType.previews</code> will amend the <code>headers.accept</code> value. <code>options.mediaType.previews</code> will be merged with an existing array set using <code>.defaults()</code>.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.data</code>\n      </th>\n      <td>\n        Any\n      </td>\n      <td>\n        Set request body directly instead of setting it to JSON based on additional parameters. See <a href=\"#data-parameter\">\"The <code>data</code> parameter\"</a> below.\n      </td>\n    </tr>\n    <tr>\n      <th>\n        <code>options.request</code>\n      </th>\n      <td>\n        Object\n      </td>\n      <td>\n        Pass custom meta information for the request. The <code>request</code> object will be returned as is.\n      </td>\n    </tr>\n  </tbody>\n</table>\n\nAll other options will be passed depending on the `method` and `url` options.\n\n1. If the option key has a placeholder in the `url`, it will be used as the replacement. For example, if the passed options are `{url: '/orgs/:org/repos', org: 'foo'}` the returned `options.url` is `https://api.github.com/orgs/foo/repos`.\n2. If the `method` is `GET` or `HEAD`, the option is passed as a query parameter.\n3. Otherwise, the parameter is passed in the request body as a JSON key.\n\n**Result**\n\n`endpoint()` is a synchronous method and returns an object with the following keys:\n\n<table>\n  <thead align=left>\n    <tr>\n      <th>\n        key\n      </th>\n      <th>\n        type\n      </th>\n      <th width=100%>\n        description\n      </th>\n    </tr>\n  </thead>\n  <tbody align=left valign=top>\n    <tr>\n      <th><code>method</code></th>\n      <td>String</td>\n      <td>The http method. Always lowercase.</td>\n    </tr>\n    <tr>\n      <th><code>url</code></th>\n      <td>String</td>\n      <td>The url with placeholders replaced with passed parameters.</td>\n    </tr>\n    <tr>\n      <th><code>headers</code></th>\n      <td>Object</td>\n      <td>All header names are lowercased.</td>\n    </tr>\n    <tr>\n      <th><code>body</code></th>\n      <td>Any</td>\n      <td>The request body if one is present. Only for <code>PATCH</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code> requests.</td>\n    </tr>\n    <tr>\n      <th><code>request</code></th>\n      <td>Object</td>\n      <td>Request meta option, it will be returned as it was passed into <code>endpoint()</code></td>\n    </tr>\n  </tbody>\n</table>\n\n### `endpoint.defaults()`\n\nOverride or set default options. Example:\n\n```js\nconst request = require(\"request\");\nconst myEndpoint = require(\"@octokit/endpoint\").defaults({\n  baseUrl: \"https://github-enterprise.acme-inc.com/api/v3\",\n  headers: {\n    \"user-agent\": \"myApp/1.2.3\",\n    authorization: `token 0000000000000000000000000000000000000001`\n  },\n  org: \"my-project\",\n  per_page: 100\n});\n\nrequest(myEndpoint(`GET /orgs/:org/repos`));\n```\n\nYou can call `.defaults()` again on the returned method, the defaults will cascade.\n\n```js\nconst myProjectEndpoint = endpoint.defaults({\n  baseUrl: \"https://github-enterprise.acme-inc.com/api/v3\",\n  headers: {\n    \"user-agent\": \"myApp/1.2.3\"\n  },\n  org: \"my-project\"\n});\nconst myProjectEndpointWithAuth = myProjectEndpoint.defaults({\n  headers: {\n    authorization: `token 0000000000000000000000000000000000000001`\n  }\n});\n```\n\n`myProjectEndpointWithAuth` now defaults the `baseUrl`, `headers['user-agent']`,\n`org` and `headers['authorization']` on top of `headers['accept']` that is set\nby the global default.\n\n### `endpoint.DEFAULTS`\n\nThe current default options.\n\n```js\nendpoint.DEFAULTS.baseUrl; // https://api.github.com\nconst myEndpoint = endpoint.defaults({\n  baseUrl: \"https://github-enterprise.acme-inc.com/api/v3\"\n});\nmyEndpoint.DEFAULTS.baseUrl; // https://github-enterprise.acme-inc.com/api/v3\n```\n\n### `endpoint.merge(route, options)` or `endpoint.merge(options)`\n\nGet the defaulted endpoint options, but without parsing them into request options:\n\n```js\nconst myProjectEndpoint = endpoint.defaults({\n  baseUrl: \"https://github-enterprise.acme-inc.com/api/v3\",\n  headers: {\n    \"user-agent\": \"myApp/1.2.3\"\n  },\n  org: \"my-project\"\n});\nmyProjectEndpoint.merge(\"GET /orgs/:org/repos\", {\n  headers: {\n    authorization: `token 0000000000000000000000000000000000000001`\n  },\n  org: \"my-secret-project\",\n  type: \"private\"\n});\n\n// {\n//   baseUrl: 'https://github-enterprise.acme-inc.com/api/v3',\n//   method: 'GET',\n//   url: '/orgs/:org/repos',\n//   headers: {\n//     accept: 'application/vnd.github.v3+json',\n//     authorization: `token 0000000000000000000000000000000000000001`,\n//     'user-agent': 'myApp/1.2.3'\n//   },\n//   org: 'my-secret-project',\n//   type: 'private'\n// }\n```\n\n### `endpoint.parse()`\n\nStateless method to turn endpoint options into request options. Calling\n`endpoint(options)` is the same as calling `endpoint.parse(endpoint.merge(options))`.\n\n## Special cases\n\n<a name=\"data-parameter\"></a>\n\n### The `data` parameter – set request body directly\n\nSome endpoints such as [Render a Markdown document in raw mode](https://developer.github.com/v3/markdown/#render-a-markdown-document-in-raw-mode) don’t have parameters that are sent as request body keys, instead, the request body needs to be set directly. In these cases, set the `data` parameter.\n\n```js\nconst options = endpoint(\"POST /markdown/raw\", {\n  data: \"Hello world github/linguist#1 **cool**, and #1!\",\n  headers: {\n    accept: \"text/html;charset=utf-8\",\n    \"content-type\": \"text/plain\"\n  }\n});\n\n// options is\n// {\n//   method: 'post',\n//   url: 'https://api.github.com/markdown/raw',\n//   headers: {\n//     accept: 'text/html;charset=utf-8',\n//     'content-type': 'text/plain',\n//     'user-agent': userAgent\n//   },\n//   body: 'Hello world github/linguist#1 **cool**, and #1!'\n// }\n```\n\n### Set parameters for both the URL/query and the request body\n\nThere are API endpoints that accept both query parameters as well as a body. In that case, you need to add the query parameters as templates to `options.url`, as defined in the [RFC 6570 URI Template specification](https://tools.ietf.org/html/rfc6570).\n\nExample\n\n```js\nendpoint(\n  \"POST https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n  {\n    name: \"example.zip\",\n    label: \"short description\",\n    headers: {\n      \"content-type\": \"text/plain\",\n      \"content-length\": 14,\n      authorization: `token 0000000000000000000000000000000000000001`\n    },\n    data: \"Hello, world!\"\n  }\n);\n```\n\n## LICENSE\n\n[MIT](LICENSE)\n","readmeFilename":"README.md","_id":"@octokit/endpoint@5.1.1","_shasum":"bd96a67d141bd897fd5357501fcea44791870925","_resolved":"https://registry.npmjs.org/@octokit/endpoint/-/endpoint-5.1.1.tgz","_from":"https://registry.npmjs.org/@octokit/endpoint/-/endpoint-5.1.1.tgz"}