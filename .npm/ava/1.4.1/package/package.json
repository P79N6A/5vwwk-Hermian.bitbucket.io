{"name":"ava","version":"1.4.1","description":"Testing can be a drag. AVA helps you get it done.","license":"MIT","repository":{"type":"git","url":"git+https://github.com/avajs/ava.git"},"homepage":"https://ava.li","bin":{"ava":"cli.js"},"engines":{"node":">=6.12.3 <7 || >=8.9.4 <9 || >=10.0.0"},"scripts":{"lint":"xo","test:flow":"flow check test/flow-types","test:tap":"tap --no-esm --no-cov --reporter=classic --timeout=300 --jobs=2 test/*.js test/reporters/*.js test/integration/*.js","test:typescript":"tsc --noEmit -p test/ts-types","test":"npm run lint && npm run test:flow && npm run test:typescript && nyc npm run test:tap"},"files":["lib","*.js","*.js.flow","index.d.ts"],"keywords":["🦄","test","runner","testing","ava","concurrent","parallel","fast","tdd","cli-app","cli","jest","mocha","tape","tap","qunit","jasmine","babel","assert","assertion","promise","promises","async","function","await","generator","generators","yield","observable","observables","unit","snapshot","expect","typescript","flow"],"dependencies":{"@ava/babel-preset-stage-4":"^2.0.0","@ava/babel-preset-transform-test-files":"^5.0.0","@ava/write-file-atomic":"^2.2.0","@babel/core":"^7.4.0","@babel/generator":"^7.4.0","@babel/plugin-syntax-async-generators":"^7.2.0","@babel/plugin-syntax-object-rest-spread":"^7.2.0","@babel/plugin-syntax-optional-catch-binding":"^7.2.0","@concordance/react":"^2.0.0","ansi-escapes":"^3.2.0","ansi-styles":"^3.2.1","arr-flatten":"^1.1.0","array-union":"^1.0.1","array-uniq":"^2.0.0","arrify":"^1.0.0","bluebird":"^3.5.3","chalk":"^2.4.2","chokidar":"^2.1.5","chunkd":"^1.0.0","ci-parallel-vars":"^1.0.0","clean-stack":"^2.0.0","clean-yaml-object":"^0.1.0","cli-cursor":"^2.1.0","cli-truncate":"^1.1.0","code-excerpt":"^2.1.1","common-path-prefix":"^1.0.0","concordance":"^4.0.0","convert-source-map":"^1.6.0","currently-unhandled":"^0.4.1","debug":"^4.1.1","del":"^4.0.0","dot-prop":"^4.2.0","emittery":"^0.4.1","empower-core":"^1.2.0","equal-length":"^1.0.0","escape-string-regexp":"^1.0.5","esm":"^3.2.20","figures":"^2.0.0","find-up":"^3.0.0","get-port":"^4.2.0","globby":"^7.1.1","ignore-by-default":"^1.0.0","import-local":"^2.0.0","indent-string":"^3.2.0","is-ci":"^2.0.0","is-error":"^2.2.1","is-observable":"^1.1.0","is-plain-object":"^2.0.4","is-promise":"^2.1.0","lodash.clone":"^4.5.0","lodash.clonedeep":"^4.5.0","lodash.clonedeepwith":"^4.5.0","lodash.debounce":"^4.0.3","lodash.difference":"^4.3.0","lodash.flatten":"^4.2.0","loud-rejection":"^1.2.0","make-dir":"^2.1.0","matcher":"^1.1.1","md5-hex":"^2.0.0","meow":"^5.0.0","ms":"^2.1.1","multimatch":"^3.0.0","observable-to-promise":"^0.5.0","ora":"^3.2.0","package-hash":"^3.0.0","pkg-conf":"^3.0.0","plur":"^3.0.1","pretty-ms":"^4.0.0","require-precompiled":"^0.1.0","resolve-cwd":"^2.0.0","slash":"^2.0.0","source-map-support":"^0.5.11","stack-utils":"^1.0.2","strip-ansi":"^5.2.0","strip-bom-buf":"^1.0.0","supertap":"^1.0.0","supports-color":"^6.1.0","trim-off-newlines":"^1.0.1","trim-right":"^1.0.1","unique-temp-dir":"^1.0.0","update-notifier":"^2.5.0"},"devDependencies":{"cli-table3":"^0.5.1","codecov":"^3.2.0","delay":"^4.1.0","execa":"^1.0.0","flow-bin":"^0.95.1","get-stream":"^4.1.0","git-branch":"^2.0.1","has-ansi":"^3.0.0","lolex":"^3.1.0","nyc":"^13.3.0","proxyquire":"^2.1.0","react":"^16.8.5","react-test-renderer":"^16.8.5","replace-string":"^2.0.0","signal-exit":"^3.0.0","sinon":"^7.3.0","source-map-fixtures":"^2.1.0","tap":"^12.6.1","temp-write":"^3.4.0","touch":"^3.1.0","ts-node":"^8.0.3","typescript":"^3.3.4000","xo":"^0.24.0","zen-observable":"^0.8.13"},"xo":{"ignores":["media/**","test/fixture/ava-paths/target/test.js","test/fixture/{source-map-initial,syntax-error}.js","test/fixture/snapshots/test-sourcemaps/build/**","test/fixture/power-assert.js","**/*.ts","test/flow-types/*"],"rules":{"no-use-extend-native/no-use-extend-native":"off"}},"nyc":{"reporter":["html","lcov","text"]},"readme":"# [![AVA](media/header.png)](https://ava.li)\n\n[![Build Status](https://travis-ci.org/avajs/ava.svg?branch=master)](https://travis-ci.org/avajs/ava)  [![Coverage Status](https://codecov.io/gh/avajs/ava/branch/master/graph/badge.svg)](https://codecov.io/gh/avajs/ava/branch/master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/ava)\n[![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\nTesting can be a drag. AVA helps you get it done. AVA is a test runner for Node.js with a concise API, detailed error output, embrace of new language features and process isolation that let you write tests more effectively. So you can ship more awesome code. 🚀\n\nFollow the [AVA Twitter account](https://twitter.com/ava__js) for updates.\n\nRead our [contributing guide](contributing.md) if you're looking to contribute (issues / PRs / etc).\n\n![](media/mini-reporter.gif)\n\n\nTranslations: [Español](https://github.com/avajs/ava-docs/blob/master/es_ES/readme.md), [Français](https://github.com/avajs/ava-docs/blob/master/fr_FR/readme.md), [Italiano](https://github.com/avajs/ava-docs/blob/master/it_IT/readme.md), [日本語](https://github.com/avajs/ava-docs/blob/master/ja_JP/readme.md), [한국어](https://github.com/avajs/ava-docs/blob/master/ko_KR/readme.md), [Português](https://github.com/avajs/ava-docs/blob/master/pt_BR/readme.md), [Русский](https://github.com/avajs/ava-docs/blob/master/ru_RU/readme.md), [简体中文](https://github.com/avajs/ava-docs/blob/master/zh_CN/readme.md)\n\n\n## Why AVA?\n\n- Minimal and fast\n- Simple test syntax\n- Runs tests concurrently\n- Enforces writing atomic tests\n- No implicit globals\n- Includes TypeScript & Flow type definitions\n- [Magic assert](#magic-assert)\n- [Isolated environment for each test file](./docs/01-writing-tests.md#process-isolation)\n- [Write your tests using the latest JavaScript syntax](#latest-javascript-support)\n- [Promise support](./docs/01-writing-tests.md#promise-support)\n- [Async function support](./docs/01-writing-tests.md#async-function-support)\n- [Observable support](./docs/01-writing-tests.md#observable-support)\n- [Enhanced assertion messages](./docs/03-assertions.md#enhanced-assertion-messages)\n- [Automatic parallel test runs in CI](#parallel-runs-in-ci)\n- [TAP reporter](./docs/05-command-line.md#tap-reporter)\n\n\n## Usage\n\nTo install and set up AVA, run:\n\n```console\nnpm init ava\n```\n\nYour `package.json` will then look like this (exact version notwithstanding):\n\n```json\n{\n\t\"name\": \"awesome-package\",\n\t\"scripts\": {\n\t\t\"test\": \"ava\"\n\t},\n\t\"devDependencies\": {\n\t\t\"ava\": \"^1.0.0\"\n\t}\n}\n```\n\nOr if you prefer using Yarn:\n\n```console\nyarn add ava --dev\n```\n\nAlternatively you can install `ava` manually:\n\n```console\nnpm install --save-dev ava\n```\n\nDon't forget to configure the `test` script in your `package.json` as per above.\n\n### Create your test file\n\nCreate a file named `test.js` in the project root directory:\n\n```js\nimport test from 'ava';\n\ntest('foo', t => {\n\tt.pass();\n});\n\ntest('bar', async t => {\n\tconst bar = Promise.resolve('bar');\n\tt.is(await bar, 'bar');\n});\n```\n\n### Running your tests\n\n```console\nnpm test\n```\n\nOr with `npx`:\n\n```console\nnpx ava\n```\n\nRun with the `--watch` flag to enable AVA's [watch mode](docs/recipes/watch-mode.md):\n\n```console\nnpx ava --watch\n```\n\n## Supported Node.js versions\n\nAVA supports the latest release of any major version that [is supported by Node.js itself](https://github.com/nodejs/Release#release-schedule). Read more in our [support statement](docs/support-statement.md).\n\n## Highlights\n\n### Magic assert\n\nAVA adds code excerpts and clean diffs for actual and expected values. If values in the assertion are objects or arrays, only a diff is displayed, to remove the noise and focus on the problem. The diff is syntax-highlighted too! If you are comparing strings, both single and multi line, AVA displays a different kind of output, highlighting the added or missing characters.\n\n![](media/magic-assert-combined.png)\n\n### Clean stack traces\n\nAVA automatically removes unrelated lines in stack traces, allowing you to find the source of an error much faster, as seen above.\n\n### Latest JavaScript support\n\nAVA uses [Babel 7](https://babeljs.io) so you can use the latest JavaScript syntax in your tests. There is no extra setup required. You don't need to be using Babel in your own project for this to work either.\n\nWe aim support all [finished syntax proposals](https://github.com/tc39/proposals/blob/master/finished-proposals.md), as well as all syntax from ratified JavaScript versions (e.g. ES2017). See our [`@ava/stage-4`](https://github.com/avajs/babel-preset-stage-4) preset for the currently supported proposals.\n\nPlease note that we do not add or modify built-ins. For example, if you use [`Object.entries()`](https://github.com/tc39/proposal-object-values-entries) in your tests, they will crash in Node.js 6 which does not implement this method.\n\nYou can disable this syntax support, or otherwise customize AVA's Babel pipeline. See our [Babel recipe] for more details.\n\n### Parallel runs in CI\n\nAVA automatically detects whether your CI environment supports parallel builds. Each build will run a subset of all test files, while still making sure all tests get executed. See the [`ci-parallel-vars`](https://www.npmjs.com/package/ci-parallel-vars) package for a list of supported CI environments.\n\n## Documentation\n\nPlease see the [files in the `docs` directory](./docs):\n\n* [Writing tests](./docs/01-writing-tests.md)\n* [Execution context](./docs/02-execution-context.md)\n* [Assertions](./docs/03-assertions.md)\n* [Snapshot testing](./docs/04-snapshot-testing.md)\n* [Command line (CLI)](./docs/05-command-line.md)\n* [Configuration](./docs/06-configuration.md)\n* [Test timeouts](./docs/07-test-timeouts.md)\n\n### Common pitfalls\n\nWe have a growing list of [common pitfalls](docs/08-common-pitfalls.md) you may experience while using AVA. If you encounter any issues you think are common, comment in [this issue](https://github.com/avajs/ava/issues/404).\n\n### Recipes\n\n- [Test setup](docs/recipes/test-setup.md)\n- [Code coverage](docs/recipes/code-coverage.md)\n- [Watch mode](docs/recipes/watch-mode.md)\n- [Endpoint testing](docs/recipes/endpoint-testing.md)\n- [When to use `t.plan()`](docs/recipes/when-to-use-plan.md)\n- [Browser testing](docs/recipes/browser-testing.md)\n- [TypeScript](docs/recipes/typescript.md)\n- [Flow](docs/recipes/flow.md)\n- [Configuring Babel][Babel recipe]\n- [Using ES modules](docs/recipes/es-modules.md)\n- [Passing arguments to your test files](docs/recipes/passing-arguments-to-your-test-files.md)\n- [Testing React components](docs/recipes/react.md)\n- [Testing Vue.js components](docs/recipes/vue.md)\n- [JSPM and SystemJS](docs/recipes/jspm-systemjs.md)\n- [Debugging tests with Chrome DevTools](docs/recipes/debugging-with-chrome-devtools.md)\n- [Debugging tests with WebStorm](docs/recipes/debugging-with-webstorm.md)\n- [Isolated MongoDB integration tests](docs/recipes/isolated-mongodb-integration-tests.md)\n- [Testing web apps using Puppeteer](docs/recipes/puppeteer.md)\n\n## FAQ\n\n### Why not `mocha`, `tape`, `tap`?\n\nMocha requires you to use implicit globals like `describe` and `it` with the default interface (which most people use). It's not very opinionated and executes tests serially without process isolation, making it slow.\n\nTape and tap are pretty good. AVA is highly inspired by their syntax. They too execute tests serially. Their default [TAP](https://testanything.org) output isn't very user-friendly though so you always end up using an external tap reporter.\n\nIn contrast AVA is highly opinionated and runs tests concurrently, with a separate process for each test file. Its default reporter is easy on the eyes and yet AVA still supports TAP output through a CLI flag.\n\n### How is the name written and pronounced?\n\nAVA, not Ava or ava. Pronounced [`/ˈeɪvə/`](media/pronunciation.m4a?raw=true): Ay (f**a**ce, m**a**de) V (**v**ie, ha**v**e) A (comm**a**, **a**go)\n\n### What is the header background?\n\nIt's the [Andromeda galaxy](https://simple.wikipedia.org/wiki/Andromeda_galaxy).\n\n### What is the difference between concurrency and parallelism?\n\n[Concurrency is not parallelism. It enables parallelism.](https://stackoverflow.com/q/1050222)\n\n## Support\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/ava)\n- [Spectrum](https://spectrum.chat/ava)\n- [Twitter](https://twitter.com/ava__js)\n\n## Related\n\n- [eslint-plugin-ava](https://github.com/avajs/eslint-plugin-ava) - Lint rules for AVA tests\n- [sublime-ava](https://github.com/avajs/sublime-ava) - Snippets for AVA tests\n- [atom-ava](https://github.com/avajs/atom-ava) - Snippets for AVA tests\n- [vscode-ava](https://github.com/samverschueren/vscode-ava) - Snippets for AVA tests\n- [gulp-ava](https://github.com/avajs/gulp-ava) - Run tests with gulp\n- [grunt-ava](https://github.com/avajs/grunt-ava) - Run tests with grunt\n- [More…](https://github.com/avajs/awesome-ava#packages)\n\n## Links\n\n- [AVA stickers, t-shirts, etc](https://www.redbubble.com/people/sindresorhus/works/30330590-ava-logo)\n- [Awesome list](https://github.com/avajs/awesome-ava)\n- [AVA Casts](http://avacasts.com)\n- [More…](https://github.com/avajs/awesome-ava)\n\n## Team\n\n[![Mark Wubben](https://github.com/novemberborn.png?size=100)](https://github.com/novemberborn) | [![Sindre Sorhus](https://github.com/sindresorhus.png?size=100)](https://github.com/sindresorhus) | [![Vadim Demedes](https://github.com/vadimdemedes.png?size=100)](https://github.com/vadimdemedes)\n---|---|---\n[Mark Wubben](https://novemberborn.net) | [Sindre Sorhus](http://sindresorhus.com) | [Vadim Demedes](https://github.com/vadimdemedes)\n\n###### Former\n\n- [Kevin Mårtensson](https://github.com/kevva)\n- [James Talmage](https://github.com/jamestalmage)\n- [Juan Soto](https://github.com/sotojuan)\n- [Jeroen Engels](https://github.com/jfmengels)\n\n\n<div align=\"center\">\n\t<br>\n\t<br>\n\t<br>\n\t<a href=\"https://ava.li\">\n\t\t<img src=\"media/logo.svg\" width=\"200\" alt=\"AVA\">\n\t</a>\n\t<br>\n\t<br>\n</div>\n\n[Babel recipe]: docs/recipes/babel.md\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/avajs/ava/issues"},"_id":"ava@1.4.1","_shasum":"4a59289e0c9728e492ec3a5be21d1072636be172","_resolved":"https://registry.npmjs.org/ava/-/ava-1.4.1.tgz","_from":"https://registry.npmjs.org/ava/-/ava-1.4.1.tgz"}