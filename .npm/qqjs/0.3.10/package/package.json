{"name":"qqjs","description":"useful functions for writing node scripts","version":"0.3.10","author":{"name":"Jeff Dickey @jdxcode"},"bugs":{"url":"https://github.com/jdxcode/qqjs/issues"},"dependencies":{"chalk":"^2.4.1","debug":"^3.1.0","execa":"^0.10.0","fs-extra":"^6.0.1","get-stream":"^3.0.0","glob":"^7.1.2","globby":"^8.0.1","http-call":"^5.1.2","load-json-file":"^5.0.0","pkg-dir":"^2.0.0","tar-fs":"^1.16.2","tmp":"^0.0.33","write-json-file":"^2.3.0"},"devDependencies":{"@oclif/tslint":"^1.1.1","@types/chai":"^4.1.3","@types/cpy":"^5.1.0","@types/execa":"^0.9.0","@types/fs-extra":"^5.0.2","@types/globby":"^6.1.0","@types/load-json-file":"^2.0.7","@types/mocha":"^5.2.0","@types/node":"^10.0.7","@types/pkg-dir":"^2.0.0","@types/read-pkg":"^3.0.0","@types/tar-fs":"^1.16.1","@types/tmp":"^0.0.33","@types/write-json-file":"^2.2.1","chai":"^4.1.2","mocha":"^5.1.1","ts-node":"^6.0.3","tslint":"^5.10.0","typescript":"^2.8.3"},"engines":{"node":">=8.0.0"},"files":["/lib"],"homepage":"https://github.com/jdxcode/qqjs","keywords":["anycli"],"license":"MIT","main":"lib/index.js","repository":{"type":"git","url":"git+https://github.com/jdxcode/qqjs.git"},"scripts":{"build":"rm -rf lib && tsc","lint":"tsc -p test --noEmit && tslint -p test","posttest":"yarn run lint","prepublishOnly":"yarn run build","test":"mocha --forbid-only \"test/**/*.test.ts\""},"types":"lib/index.d.ts","readme":"qqjs\n====\n\nA bunch of wrappers for various utilites. Ideal for writing shell scripts in node.\n\n[![Version](https://img.shields.io/npm/v/qqjs.svg)](https://npmjs.org/package/qqjs)\n[![CircleCI](https://circleci.com/gh/jdxcode/qqjs/tree/master.svg?style=svg)](https://circleci.com/gh/jdxcode/qqjs/tree/master)\n[![Appveyor CI](https://ci.appveyor.com/api/projects/status/github/jdxcode/qqjs?branch=master&svg=true)](https://ci.appveyor.com/project/heroku/qqjs/branch/master)\n[![Codecov](https://codecov.io/gh/jdxcode/qqjs/branch/master/graph/badge.svg)](https://codecov.io/gh/jdxcode/qqjs)\n[![Greenkeeper](https://badges.greenkeeper.io/jdxcode/qqjs.svg)](https://greenkeeper.io/)\n[![Known Vulnerabilities](https://snyk.io/test/npm/qqjs/badge.svg)](https://snyk.io/test/npm/qqjs)\n[![Downloads/week](https://img.shields.io/npm/dw/qqjs.svg)](https://npmjs.org/package/qqjs)\n[![License](https://img.shields.io/npm/l/qqjs.svg)](https://github.com/jdxcode/qqjs/blob/master/package.json)\n\nUsage\n=====\n\nIt's best to [look at the code](src/index.ts) to see what all is available, but here is an example of using it:\n\n```js\nconst qq = require('qqjs')\n\n// qq.run(fn) is just fn().catch(qq.handleError)\n// this helps skip a couple of steps when running async functions in scripts\nqq.run(async () => {\n  // turn silent mode to log all commands\n  // can also see output with DEBUG=qq\n  // qq.config.silent = false\n\n  // run a command with qq.x this runs synchronously using execa\n  // by default it will echo out to the screen the commmand, stdout/stderr and connect to stdin\n  // can send either a string\n  await qq.x('git --version')\n\n  // or specify the arguments\n  await qq.x('git' ['--version'])\n\n  await qq.cd('newdir')\n\n  await qq.cp('from', 'to')\n\n  const pjson = await qq.readJSON('package.json')\n  await qq.writeJSON('package.json', {})\n\n  // for almost any command, if it takes a string you can also pass an array and it will automatically path.join()\n  await qq.writeJSON(['mydir', 'package.json'], {})\n})\n```\n\nStatus\n======\n\n- [x] x (exec)\n- [x] readJSON\n- [x] writeJSON\n- [x] path\n- [x] mkdirp\n- [x] env\n- [x] globby\n- [x] read file\n- [x] write file\n- [x] cd\n- [x] ls\n- [x] cp (use cpy)\n- [x] mv\n- [x] rm\n- [x] cwd\n- [x] file exists\n- [x] homedir\n- [x] chmod\n- [x] download files\n- [x] emptyDir\n- [ ] ln\n- [ ] is file/directory/symlink/etc\n- [ ] batch rename\n- [ ] sed\n- [ ] upload files\n- [ ] aws s3\n- [ ] resolve-from\n- [ ] open-editor\n- [ ] hasha\n- [x] temp dirs\n- [ ] temp files\n- [ ] git stuff?\n- [ ] find-up\n- [ ] read-pkg\n- [ ] which\n- [x] pushd/popd\n","readmeFilename":"README.md","_id":"qqjs@0.3.10","_shasum":"ae3af7cb4c424242db4aa9b92c42d29fa9101562","_resolved":"https://registry.npmjs.org/qqjs/-/qqjs-0.3.10.tgz","_from":"https://registry.npmjs.org/qqjs/-/qqjs-0.3.10.tgz"}