{"name":"semver-try-require","version":"2.0.4","description":"micro module to require (versions of) modules that might not be there","main":"src/index.js","files":["src/","types/","LICENSE","package.json","README.md"],"scripts":{"check":"npm-run-all --parallel lint test","check:full":"npm-run-all --parallel check check:outdated","check:outdated":"npm outdated","lint":"eslint src test","lint:fix":"eslint --fix src test","test":"jest --collectCoverage","update-dependencies":"npm-run-all upem:update upem:install lint:fix check","upem:update":"npm outdated --json | upem","upem:install":"npm install"},"keywords":[],"author":{"name":"Sander Verweij","url":"https://sverweij.github.io/"},"license":"MIT","devDependencies":{"eslint":"5.15.3","eslint-config-standard":"12.0.0","eslint-plugin-import":"2.16.0","eslint-plugin-node":"8.0.1","eslint-plugin-promise":"4.0.1","eslint-plugin-security":"1.4.0","eslint-plugin-standard":"4.0.0","jest":"24.5.0","npm-run-all":"4.1.5","upem":"2.0.0"},"repository":{"type":"git","url":"git+https://github.com/sverweij/semver-try-require.git"},"bugs":{"url":"https://github.com/sverweij/semver-try-require/issues"},"homepage":"https://github.com/sverweij/semver-try-require","dependencies":{"semver":"6.0.0"},"jest":{"clearMocks":true,"testEnvironment":"node","coverageDirectory":"coverage","coverageReporters":["text-summary","lcov","html"],"coverageThreshold":{"global":{"statements":100,"branches":100,"functions":100,"lines":100,"exclude":["test/**/*","coverage/**/*","tmp*"],"all":true}}},"engines":{"node":">=6"},"types":"types/index.d.ts","eslintConfig":{"extends":"standard","plugins":["security"],"env":{"node":true,"es6":true},"overrides":[{"files":["test/**/*.js"],"env":{"jest":true}}],"rules":{"complexity":["warn",4],"security/detect-unsafe-regex":"error","security/detect-buffer-noassert":"error","security/detect-child-process":"error","security/detect-disable-mustache-escape":"error","security/detect-eval-with-expression":"error","security/detect-no-csrf-before-method-override":"error","security/detect-non-literal-fs-filename":"off","security/detect-non-literal-regexp":"error","security/detect-non-literal-require":"error","security/detect-object-injection":"error","security/detect-possible-timing-attacks":"error","security/detect-pseudoRandomBytes":"error"}},"eslintIgnore":["node_modules"],"readme":"## What's this then?\nA micro module that helps you require (versions of) modules\nthat might not be there.\n\nUseful to test for the availability of _optional_ and _peer_ dependencies\nbefore working with them.\n\n## Example\nSo you made the typescript compiler (v2) an optional dependency.\nBut you just want to keep running if it ain't there.\n\nDo this:\n\n```javascript\nconst tryRequire = require('semver-try-require');\n\n// import typescript if there's a version >= 2 available\nconst typescript = tryRequire('typescript', '>=2');\n\n// now you can test if typescript is actually there\nconst lProgram = 'const cube = x => x*x*x; console.log(cube(42))';\n\nif (typescript !== false) {\n    console.log(\n        typescript.transpileModule(lProgram, {}).outputText\n    );\n    // Result:\n    //   var cube = function (x) { return x * x * x; };\n    //   console.log(cube(42));\n} else {\n    // typescript >=2 not found - use fallback\n    console.log(\n        lProgram\n    );\n    // Result:\n    //    const cube = x => x*x*x; console.log(cube(42))\n}\n```\n\n## Signature\n### `pModulename`\nThe name of the module to resolve.\n\n### `pSemVer`\nA semantic version (range). Optional.\n\n### return value\nThe (resolved) module identified by pModuleName if:\n- it is available, and\n- it satisfies the semantic version range specified by pSemVer\n\nreturns false in all other cases\n\n\n## History\nThis module started to try a few non-run-of-the-mill things with the\nnpm registry (deprecate, beta publishing, renaming). The tryRequire\nfunction in\n[dependency-cruiser ](https://github.com/sverweij/dependency-cruiser)\nseemed like a good candidate as it was not a thing that'd be unique\nto dependency-cruiser, and would probably be easier to maintain on its\nown anyway. I named it `tigerclaws-try-require` until I realized the \n_semver_ check was what distinguished it from the other try-require\nlike npm modules out there.\n\n[dependency-cruiser](https://github.com/sverweij/dependency-cruiser)\nnow uses semver-try-require in the [transpiler wrappers](https://github.com/sverweij/dependency-cruiser/tree/develop/src/extract/transpile) \nand it enables it to cruise typescript, coffeescript and livescript \ncode without having to ship the heavy duty compilers for these \nlanguages.\n\n## License\n[MIT](LICENSE)\n\n## Badge & flair section\n[![Build Status](https://travis-ci.org/sverweij/semver-try-require.svg?branch=master)](https://travis-ci.org/sverweij/semver-try-require)\n[![npm stable version](https://img.shields.io/npm/v/semver-try-require.svg)](https://npmjs.com/package/semver-try-require)\n[![total downloads on npm](https://img.shields.io/npm/dt/semver-try-require.svg?maxAge=2591999)](https://npmjs.com/package/semver-try-require)\n\nMade with :metal: in Holland\n","readmeFilename":"README.md","_id":"semver-try-require@2.0.4","_shasum":"ce4773428fcb826f6da675c9a9417036b51885fb","_resolved":"https://registry.npmjs.org/semver-try-require/-/semver-try-require-2.0.4.tgz","_from":"https://registry.npmjs.org/semver-try-require/-/semver-try-require-2.0.4.tgz"}