{"name":"gh-release","description":"Create a release for a node package on github.","version":"3.5.0","author":{"name":"Nate Goldman","email":"ungoldman@gmail.com","url":"http://ungoldman.com/"},"bin":{"gh-release":"./bin/cli.js"},"bugs":{"url":"https://github.com/hypermodules/gh-release/issues"},"contributors":[{"name":"Nate Goldman","email":"ungoldman@gmail.com"},{"name":"Bret Comnes","email":"bcomnes@gmail.com"},{"name":"Paul C Pederson","email":"paul.c.pederson@gmail.com"},{"name":"John Gravois","email":"me@johngravois.com"},{"name":"Hawken MacKay Rives","email":"hawkrives@gmail.com"},{"name":"Henry Huang","email":"h1886@outlook.com"},{"name":"Zeke Sikelianos","email":"zeke@sikelianos.com"},{"name":"Belikin Roman","email":"roman.sstu@gmail.com"},{"name":"Ted Janeczko","email":"tjaneczko@brightcove.com"}],"dependencies":{"chalk":"^1.0.0","changelog-parser":"^2.0.0","deep-extend":"^0.6.0","gauge":"^2.7.4","gh-release-assets":"^1.1.0","ghauth":"^3.2.0","github-url-to-object":"^3.0.0","inquirer":"^6.2.0","request":"^2.82.0","shelljs":"^0.3.0","update-notifier":"^2.2.0","yargs":"^2.1.1"},"devDependencies":{"gh-pages":"^0.11.0","live-server":"^1.1.0","npm-run-all":"^3.1.0","quick-gits":"^1.0.4","rimraf":"^2.2.8","sitedown":"^3.1.0","snazzy":"^5.0.0","standard":"^8.1.0","tap-spec":"^4.1.1","tape":"^4.6.0","tmp":"0.0.25"},"files":["bin/","lib/","index.js"],"homepage":"https://github.com/hypermodules/gh-release","keywords":["changelog","github","release","semver","tag"],"license":"ISC","main":"index.js","repository":{"type":"git","url":"git+https://github.com/hypermodules/gh-release.git"},"scripts":{"gh-pages":"npm run site && gh-pages -d site","pretest":"standard | snazzy","release":"./bin/cli.js && npm publish","serve":"run-p serve:*","serve:site":"live-server site","serve:watch":"npm run site:html -- -w","site":"run-s site:*","site:clean":"rm -rf site","site:html":"sitedown -b site -l docs/layout.html","site:img":"cp demo.gif site/","start":"npm-run-all site --parallel serve:*","test":"tape test/*.js | tap-spec"},"readme":"# gh-release\n\nCreate a release for a node package on GitHub.\n\n[![npm][1]][2]\n[![travis][3]][4]\n[![standard][5]][6]\n[![downloads][7]][2]\n\n[1]: https://img.shields.io/npm/v/gh-release.svg?style=flat-square\n[2]: https://www.npmjs.com/package/gh-release\n[3]: https://img.shields.io/travis/hypermodules/gh-release/master.svg?style=flat-square\n[4]: https://travis-ci.org/hypermodules/gh-release\n[5]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[6]: http://standardjs.com/\n[7]: https://img.shields.io/npm/dm/gh-release.svg?style=flat-square\n\n## Features\n\n- Uses the [Github Releases API](https://developer.github.com/v3/repos/releases/) to create a new GitHub release.\n- Defaults to using information from `package.json` and `CHANGELOG.md`.\n- Supports uploading release assets.\n\n![gh-release example](demo.gif)\n\n## Install\n\n```\n$ npm install gh-release\n```\n\n## Usage\n\n### Command-line interface\n\n```console\n$ gh-release\nYour GitHub username: ungoldman\nYour GitHub password: ✔✔✔✔✔✔✔✔\n\ncreating release v1.0.0 for ungoldman/cool-project\n\nname:               v1.0.0\ntag_name:           v1.0.0\ntarget_commitish:   9561804a4d1fca2525d3207bec4907dd5ec7a705\nbody:\n\n* engage\n\n? publish release to github? Yes\nhttps://github.com/ungoldman/cool-project/releases/tag/v1.0.0\n```\n\nShould be run at the root of the project to be released.\n\nExpects a `package.json` and `CHANGELOG.md` in the working directory.\n\nPrints release URL to `stdout` on success.\n\nUses [`ghauth`](https://github.com/rvagg/ghauth) for authentication with Github. A Github API OAuth token is saved to the `gh-release` config directory after the first time authenticating. Note that the config directory is determined by [`application-config`](https://github.com/LinusU/node-application-config) and is OS-specific. gh-release will alternatively use the token specified in the `GH_RELEASE_GITHUB_API_TOKEN` environment variable if it exists. This allows it to be used in continuous deployment systems, which can inject different GitHub API tokens depending on the location of the project.\n\nGet usage info by running with `--help` or `-h`.\n\n```console\n$ gh-release --help\nUsage: gh-release [options]\n\nExamples:\n  gh-release -n v2.0.3 -c master -d    create a draft release with title v2.0.3 tagged at HEAD of master\n\n\nOptions:\n  -t, --tag_name          tag for this release\n  -c, --target_commitish  commitish value for tag\n  -n, --name              text of release title\n  -b, --body              text of release body\n  -o, --owner             repo owner\n  -r, --repo              repo name\n  -d, --draft             publish as draft                          [default: false]\n  -p, --prerelease        publish as prerelease                     [default: false]\n  -w, --workpath          path to working directory                 [default: \"/Users/ng/dev/git/gh-release\"]\n  -e, --endpoint          GitHub API endpoint URL                   [default: \"https://api.github.com\"]\n  -a, --assets            comma-delimited list of assets to upload  [default: false]\n  --dry-run               dry run (stops before release step)       [default: false]\n  -y, --yes               bypass confirmation prompt for release    [default: false]\n  -h, --help              Show help\n  -v, --version           Show version number\n```\n\n### Node API\n\n```js\nvar ghRelease = require('gh-release')\n\n// all options have defaults and can be omitted\nvar options = {\n  tag_name: 'v1.0.0',\n  target_commitish: 'master',\n  name: 'v1.0.0',\n  body: '* init\\n',\n  draft: false,\n  prerelease: false,\n  repo: 'gh-release',\n  owner: 'ungoldman',\n  endpoint: 'https://api.github.com' // for GitHub enterprise, use http(s)://hostname/api/v3\n}\n\n// options can also be just an empty object\nvar options = {}\n\n// auth is required\n// it can either be a username & password...\noptions.auth = {\n  username: 'ungoldman',\n  password: 'XXXXXXXX'\n}\n\n// or an API token\noptions.auth = {\n  token: 'XXXXXXXX'\n}\n\nghRelease(options, function (err, result) {\n  if (err) throw err\n  console.log(result) // create release response: https://developer.github.com/v3/repos/releases/#response-4\n})\n```\n\n## Defaults\n\nAll default values taken from `package.json` unless specified otherwise.\n\n| name | description | default |\n| ---: | ----------- | ------- |\n| `tag_name` | release tag | 'v' + `version` |\n| `target_commitish` | commitish value to tag | HEAD of current branch |\n| `name` | release title | 'v' + `version` |\n| `body` | release text | `CHANGELOG.md` section matching `version` |\n| `owner` | repo owner | repo owner in `repository` |\n| `repo` | repo name | repo name in `repository` |\n| `draft` | publish as draft | false |\n| `prerelease` | publish as prerelease | false |\n| `assets` | release assets to upload | false |\n| `endpoint` | GitHub API endpoint URL | https://api.github.com |\n\nOverride defaults with flags (CLI) or the `options` object (node).\n\n## Standards\n\n* `CHANGELOG.md`: http://keepachangelog.com\n* `package.json`: https://docs.npmjs.com/files/package.json\n\n## Example\n\nAll [releases](https://github.com/hypermodules/gh-release/releases) of `gh-release` were created with `gh-release`.\n\n## Config location\n\nPlatform | Location\n--- | ---\nOS X | `~/Library/Application Support/gh-release/config.json`\nLinux (XDG) | `$XDG_CONFIG_HOME/gh-release/config.json`\nLinux (Legacy) | `~/.config/gh-release/config.json`\nWindows (> Vista) | `%LOCALAPPDATA%/gh-release/config.json`\nWindows (XP, 2000) | `%USERPROFILE%/Local Settings/Application Data/gh-release/config.json`\n\n## Motivation\n\nThere are packages that already do something like this, and they're great, but I want something that does this one thing really well and nothing else, leans heavily on standards in `package.json` and `CHANGELOG.md`, and can work both as a CLI tool and programmatically in node.\n\n## Contributing\n\nContributions welcome! Please read the [contributing guidelines](CONTRIBUTING.md) first.\n\n## History\n\nPlease read the [change log](CHANGELOG.md) for a human-readable history of changes.\n\n## Tests\n\n`gh-release` uses [`standard`][6] and [`tape`](https://github.com/substack/tape) for testing. You can run all tests with `npm test`.\n\n## See also\n\n- [gh-release-assets](https://github.com/hypermodules/gh-release-assets)\n- [maintenance-modules](https://github.com/maxogden/maintenance-modules)\n\n## License\n\n[ISC](LICENSE.md)\n","readmeFilename":"README.md","_id":"gh-release@3.5.0","_shasum":"89563e233eb11cef4b3f1ea2dabcf33e094c77ef","_resolved":"https://registry.npmjs.org/gh-release/-/gh-release-3.5.0.tgz","_from":"https://registry.npmjs.org/gh-release/-/gh-release-3.5.0.tgz"}