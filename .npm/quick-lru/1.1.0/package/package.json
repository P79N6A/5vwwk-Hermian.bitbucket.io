{"name":"quick-lru","version":"1.1.0","description":"Simple \"Least Recently Used\" (LRU) cache","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/quick-lru.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && nyc ava"},"files":["index.js"],"keywords":["lru","quick","cache","caching","least","recently","used","fast","map","hash","buffer"],"devDependencies":{"ava":"*","coveralls":"^2.12.0","nyc":"^11.0.3","xo":"*"},"readme":"# quick-lru [![Build Status](https://travis-ci.org/sindresorhus/quick-lru.svg?branch=master)](https://travis-ci.org/sindresorhus/quick-lru) [![Coverage Status](https://coveralls.io/repos/github/sindresorhus/quick-lru/badge.svg?branch=master)](https://coveralls.io/github/sindresorhus/quick-lru?branch=master)\n\n> Simple [\"Least Recently Used\" (LRU) cache](https://en.m.wikipedia.org/wiki/Cache_replacement_policies#Least_Recently_Used_.28LRU.29)\n\nUseful when you need to cache something and limit memory usage.\n\nInspired by the [`haslru` algorithm](https://github.com/dominictarr/hashlru#algorithm), but instead uses [`Map`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map) to support keys of any type, not just strings, and values can be `undefined`.\n\n\n## Install\n\n```\n$ npm install quick-lru\n```\n\n\n## Usage\n\n```js\nconst QuickLRU = require('quick-lru');\n\nconst lru = new QuickLRU({maxSize: 1000});\n\nlru.set('ðŸ¦„', 'ðŸŒˆ');\n\nlru.has('ðŸ¦„');\n//=> true\n\nlru.get('ðŸ¦„');\n//=> 'ðŸŒˆ'\n```\n\n\n## API\n\n### new QuickLRU([options])\n\nReturns a new instance.\n\n### options\n\nType: `Object`\n\n#### maxSize\n\n*Required*<br>\nType: `Object`\n\nMaximum number of items before evicting the least recently used items.\n\n### Instance\n\nThe instance is [`iterable`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Iteration_protocols) so you can use it directly in a [`forâ€¦of`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of) loop.\n\nBoth `key` and `value` can be of any type.\n\n#### .set(key, value)\n\nSet an item. Returns the instance.\n\n#### .get(key)\n\nGet an item.\n\n#### .has(key)\n\nCheck if an item exists.\n\n#### .peek(key)\n\nGet an item without marking it as recently used.\n\n#### .delete(key)\n\nDelete an item.\n\n#### .clear()\n\nDelete all items.\n\n#### .keys()\n\nIterable for all the keys.\n\n#### .values()\n\nIterable for all the values.\n\n#### .size\n\nGet the item count.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/sindresorhus/quick-lru/issues"},"homepage":"https://github.com/sindresorhus/quick-lru#readme","_id":"quick-lru@1.1.0","_shasum":"4360b17c61136ad38078397ff11416e186dcfbb8","_resolved":"https://registry.npmjs.org/quick-lru/-/quick-lru-1.1.0.tgz","_from":"https://registry.npmjs.org/quick-lru/-/quick-lru-1.1.0.tgz"}