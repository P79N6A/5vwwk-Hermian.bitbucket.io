{"name":"changelog-parser","description":"Change log parser for node.","version":"2.8.0","author":{"name":"Nate Goldman","email":"ungoldman@gmail.com"},"bin":{"changelog-parser":"./bin/cli.js"},"bugs":{"url":"https://github.com/hypermodules/changelog-parser/issues"},"contributors":[{"name":"Nate Goldman","email":"ungoldman@gmail.com"},{"name":"Rachel Nehmer","email":"kneemer@gmail.com"},{"name":"Viktor Havrylin","email":"fer0x.feo@gmail.com"},{"name":"J R Mykolyn","email":"jrmykolyn@gmail.com"},{"name":"Bogdan Plieshka","email":"bogdanplieshka@gmail.com"},{"name":"Ciro Nunes","email":"ciroanunes@gmail.com"},{"name":"Andy Edwards","email":"jedwards@fastmail.com"}],"dependencies":{"line-reader":"^0.2.4","remove-markdown":"^0.2.2"},"devDependencies":{"gh-release":"^3.1.1","standard":"^10.0.2","tap-spec":"^4.1.1","tape":"^4.6.0"},"homepage":"https://github.com/hypermodules/changelog-parser","keywords":["CHANGELOG.md","changelog","parser","semantic","semver","versioning"],"license":"ISC","main":"index.js","repository":{"type":"git","url":"git+https://github.com/hypermodules/changelog-parser.git"},"scripts":{"release":"gh-release && npm publish","test":"standard && node test | tap-spec"},"readme":"# changelog-parser\n\n[![npm][npm-img]][npm-url] [![travis][travis-img]][travis-url] [![standard][standard-image]][standard-url] [![downloads][downloads-img]][npm-url]\n\nChange log parser for node.\n\n[npm-img]: https://img.shields.io/npm/v/changelog-parser.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/changelog-parser\n[travis-img]: https://img.shields.io/travis/hypermodules/changelog-parser.svg?style=flat-square\n[travis-url]: https://travis-ci.org/hypermodules/changelog-parser\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: http://standardjs.com/\n[downloads-img]: https://img.shields.io/npm/dm/changelog-parser.svg?style=flat-square\n\n## Install\n\n```\nnpm install changelog-parser\n```\n\n## Usage\n\nThis module exports a single function. It supports both callbacks and promises.\n\n```js\nvar parseChangelog = require('changelog-parser')\n```\n\n### Callback\n\nIf provided with a callback, `parseChangelog` will invoke the function with the parsed changelog.\n\n```js\nparseChangelog('path/to/CHANGELOG.md', function (err, result) {\n  if (err) throw err\n\n  // changelog object\n  console.log(result)\n})\n```\n\n### Promise\n\nIf no callback is provided, `parseChangelog` will return a [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\n```js\nparseChangelog('path/to/CHANGELOG.md')\n  .then(function (result) {\n    // changelog object\n    console.log(result)\n  })\n  .catch(function (err) {\n    // Whoops, something went wrong!\n    console.error(err)\n  })\n```\n\n### Options\n\nYou can optionally provide a configuration object `parseChangelog` function.\n\n```js\nparseChangelog({\n  filePath: 'path/to/CHANGELOG.md',\n  removeMarkdown: false // default: true\n})\n```\n\n#### filePath\n\nPath to changelog file.\n\n#### text\n\nText of changelog file (you can use this instead of `filePath`).\n\n#### removeMarkdown\n\nRemoves the markdown markup from the changelog entries by default. You can change its value to `false` to keep the markdown.\n\n### Command-line interface\n\nThere is also a command-line interface available if you install it with `-g`.\n\n```\nnpm install -g changelog-parser\n```\n\nThis installs a program called `changelog-parser` that you simply pass a `CHANGELOG.md` file.\n\n```\nchangelog-parser path/to/CHANGELOG.md\n```\n\nThis will print the JSON object representing the change log to the terminal.\n\nAlternately you can run it without arguments and it will look for a `CHANGELOG.md` file in the working directory.\n\n## Standards\n\nThis module assumes your change log is a [markdown](http://daringfireball.net/projects/markdown/syntax) file structured roughly like so:\n\n```markdown\n# changelog title\n\nA cool description (optional).\n\n## unreleased\n* foo\n\n## x.y.z - YYYY-MM-DD (or DD.MM.YYYY, D/M/YY, etc.)\n* bar\n\n## [a.b.c]\n\n### Changes\n\n* Update API\n* Fix bug #1\n\n## 2.2.3-pre.1 - 2013-02-14\n* Update API\n\n## 2.0.0-x.7.z.92 - 2013-02-14\n* bark bark\n* woof\n* arf\n\n## v1.3.0\n\n* make it so\n\n## [1.2.3](link)\n* init\n\n[a.b.c]: http://altavista.com\n```\n\nParsing the above example will return the following object:\n\n```js\n{\n  title: 'changelog title',\n  description: 'A cool description (optional).',\n  versions: [\n    { version: null,\n      title: 'unreleased',\n      date: null,\n      body: '* foo',\n      parsed: {\n        _: [\n          'foo'\n        ]\n      }\n    },\n    { version: 'x.y.z',\n      title: 'x.y.z - YYYY-MM-DD',\n      date: null,\n      body: '* bar',\n      parsed: {\n        _: [\n          'bar'\n        ]\n      }\n    },\n    { version: 'a.b.c',\n      title: '[a.b.c]',\n      date: null,\n      body: '### Changes\\n\\n* Update API\\n* Fix bug #1',\n      parsed: {\n        _: [\n          'Update API',\n          'Fix bug #1'\n        ],\n        Changes: [\n          'Update API',\n          'Fix bug #1'\n        ]\n      }\n    },\n    { version: '2.2.3-pre.1',\n      title: '2.2.3-pre.1 - 2013-02-14',\n      date: '2013-02-14',\n      body: '* Update API',\n      parsed: {\n        _: [\n          'Update API'\n        ]\n      }\n    },\n    { version: '2.0.0-x.7.z.92',\n      title: '2.0.0-x.7.z.92 - 2013-02-14',\n      date: '2013-02-14',\n      body: '* bark bark\\n* woof\\n* arf',\n      parsed: {\n        _: [\n          'bark bark',\n          'woof',\n          'arf'\n        ]\n      }\n    },\n    { version: '1.3.0',\n      title: 'v1.3.0',\n      date: null,\n      body: '* make it so',\n      parsed: {\n        _: [\n          'make it so'\n        ]\n      }\n    },\n    { version: '1.2.3',\n      title: '[1.2.3](link)',\n      date: null,\n      body: '* init',\n      parsed: {\n        _: [\n          'init'\n        ]\n      }\n    }\n  ]\n}\n```\n\nExpects versions to be [semver](http://semver.org/) compliant, otherwise sets `version` to null.\n\nEach entry is available as an object in the `versions` array. The body of a given entry can be accessed using the following properties:\n\n- `body` - A string containing all of the updates/changes/etc. for the current entry. This property includes both plain text and markdown.\n- `parsed` - An object which points to one or more arrays of data for the current entry. All data for the current entry is present in the array at key `_` (eg. `parsed._`). If the entry contains subheadings (eg. `### Added`, `### Changed`), then any items underneath each subheading will be present in an array at the corresponding key (eg. `parsed.Added`, `parsed.Changed`). Each array contains plain text.\n\n`CHANGELOG.md` standards are inspired by [keepachangelog.com](http://keepachangelog.com/).\n\n## Contributing\n\nContributions welcome! Please read the [contributing guidelines](CONTRIBUTING.md) first.\n\n## See Also\n\n- [changelog-init](https://github.com/bcomnes/changelog-init)\n- [gh-release](https://github.com/hypermodules/gh-release)\n\n## License\n\n[ISC](LICENSE.md)\n","readmeFilename":"README.md","_id":"changelog-parser@2.8.0","_shasum":"c14293e3e8fab797913c722de965480198650108","_resolved":"https://registry.npmjs.org/changelog-parser/-/changelog-parser-2.8.0.tgz","_from":"https://registry.npmjs.org/changelog-parser/-/changelog-parser-2.8.0.tgz"}