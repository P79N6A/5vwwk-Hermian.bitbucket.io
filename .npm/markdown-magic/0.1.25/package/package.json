{"name":"markdown-magic","version":"0.1.25","description":"Automatically update markdown files with content from external sources","main":"index.js","bin":{"markdown":"./cli.js","md-magic":"./cli.js"},"scripts":{"docs":"node examples/generate-readme.js","test":"ava --verbose","test:watch":"ava --verbose --watch","lint":"eslint .","publish":"git push origin && git push origin --tags","release:patch":"npm version patch && npm publish","release:minor":"npm version minor && npm publish","release:major":"npm version major && npm publish"},"author":{"name":"David Wells"},"license":"MIT","homepage":"https://github.com/DavidWells/markdown-magic#readme","repository":{"type":"git","url":"git+https://github.com/DavidWells/markdown-magic.git"},"dependencies":{"commander":"^2.9.0","deepmerge":"^1.3.0","find-up":"^2.1.0","fs-extra":"^1.0.0","globby":"^6.1.0","is-local-path":"^0.1.6","markdown-toc":"^1.0.2","sync-request":"^3.0.1"},"devDependencies":{"ava":"^0.17.0","babel-eslint":"^7.1.1","dox":"^0.9.0","eslint":"^3.11.1","eslint-config-airbnb-base":"^10.0.1","eslint-plugin-import":"^2.2.0","ghooks":"^1.3.2","sinon":"^1.17.6"},"config":{"ghooks":{"pre-commit":"npm run docs"}},"readme":"# Markdown Magic [![npm-version][npm-badge]][npm-link]\n\n✨ Add a little magic to your markdown ✨\n\n## About\n\n<img align=\"right\" width=\"200\" height=\"183\" src=\"https://cloud.githubusercontent.com/assets/532272/21507867/3376e9fe-cc4a-11e6-9350-7ec4f680da36.gif\">Markdown magic uses comment blocks in markdown files to automatically sync or transform its contents.\n\n- Automatically keep markdown files up to date from local or remote code sources\n- Transform markdown content with custom transform functions\n- Render markdown with any template engine\n- Automatically generate a table of contents\n- ... etc\n\nThe comments markdown magic uses are hidden in markdown and when viewed as HTML.\n\nThis `README.md` is generated with `markdown-magic` [view the raw file](https://raw.githubusercontent.com/DavidWells/markdown-magic/master/README.md) to see how.\n\n[Video demo](http://www.youtube.com/watch?v=4V2utrvxwJ8) • [Example Repo](https://github.com/DavidWells/repo-using-markdown-magic)\n\n## Table of Contents\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (TOC:collapse=true&collapseText=Click to expand) -->\n<details>\n<summary>Click to expand</summary>\n\n- [About](#about)\n- [Install](#install)\n- [Usage](#usage)\n  * [API](#api)\n  * [Configuration Options](#configuration-options)\n- [CLI Usage](#cli-usage)\n- [Transforms](#transforms)\n  * [🔀 CODE](#%F0%9F%94%80-code)\n  * [🔀 REMOTE](#%F0%9F%94%80-remote)\n  * [🔀 TOC](#%F0%9F%94%80-toc)\n- [🔌 Third Party Plugins](#%F0%9F%94%8C-third-party-plugins)\n- [Adding Custom Transforms](#adding-custom-transforms)\n- [Plugin Example](#plugin-example)\n- [Other usage examples](#other-usage-examples)\n- [Custom Transform Demo](#custom-transform-demo)\n- [Prior Art](#prior-art)\n- [License](#license)\n\n</details>\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END -->\n\n## Install\n\n```bash\nnpm install markdown-magic --save-dev\n```\n\n## Usage\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (CODE:src=./examples/basic-usage.js) -->\n<!-- The below code snippet is automatically added from ./examples/basic-usage.js -->\n```js\nimport path from 'path'\nimport markdownMagic from 'markdown-magic'\n\nconst markdownPath = path.join(__dirname, 'README.md')\nmarkdownMagic(markdownPath)\n```\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END *-->\n\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (RENDERDOCS:path=./index.js)\n- Do not remove or modify this section -->\n### API\n```js\nmarkdownMagic(filePath, config, callback)\n```\n- `filePaths` - *String or Array* - Path or glob pattern. Uses [globby patterns](https://github.com/sindresorhus/multimatch/blob/master/test.js)\n- `config` - See configuration options below\n- `callback` - callback to run after markdown updates\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END - Do not remove or modify this section -->\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (RENDERDOCS:path=./lib/processFile.js)\n- Do not remove or modify this section -->\n### Configuration Options\n\n- `transforms` - *object* - (optional) Custom commands to transform block contents, see transforms & custom transforms sections below.\n\n- `outputDir` - *string* - (optional) Change output path of new content. Default behavior is replacing the original file\n\n- `matchWord` - *string* - (optional) Comment pattern to look for & replace inner contents. Default `AUTO-GENERATED-CONTENT`\n\n- `DEBUG` - *Boolean* - (optional) set debug flag to `true` to inspect the process\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END - Do not remove or modify this section -->\n\n## CLI Usage\n\nYou can use `markdown-magic` as a CLI command. Run `markdown --help` to see all available CLI options\n\n```bash\nmarkdown --help\n# or\nmd-magic\n```\n\nThis is useful for adding the package quickly to your `package.json` npm scripts\n\nCLI usage example with options\n\n```bash\nmd-magic --path '**/*.md' --config ./config.file.js\n```\n\nIn NPM scripts, `npm run docs` would run the markdown magic and parse all the `.md` files in the directory.\n\n```json\n\"scripts\": {\n  \"docs\": \"md-magic --path '**/*.md' --ignore 'node_modules'\"\n},\n```\n\nIf you have a `markdown.config.js` file where `markdown-magic` is invoked, it will automatically use that as the configuration unless otherwise specified by `--config` flag.\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (CODE:src=./markdown.config.js) -->\n<!-- The below code snippet is automatically added from ./markdown.config.js -->\n```js\n/* CLI markdown.config.js file example */\nmodule.exports = {\n  transforms: {\n    /* Match <!-- AUTO-GENERATED-CONTENT:START (LOLZ) --> */\n    LOLZ(content, options) {\n      return `This section was generated by the cli config markdown.config.js file`\n    }\n  },\n  callback: function () {\n    console.log('done')\n  }\n}\n```\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END *-->\n\n## Transforms\n\nMarkdown Magic comes with a couple of built in transforms for you to use or you can extend it with your own transforms. See 'Custom Transforms' below.\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (RENDERDOCS:path=./lib/transforms/index.js) - Do not remove or modify this section -->\n### 🔀 CODE\n\nGet code from file or URL and put in markdown\n\n**Options:**\n- `src`: The relative path to the code to pull in, or the `URL` where the raw code lives\n- `syntax` (optional): Syntax will be inferred by fileType if not specified\n- `header` (optional): Will add header comment to code snippet. Useful for pointing to relative source directory or adding live doc links\n\n**Example:**\n```md\n<!-- AUTO-GENERATED-CONTENT:START (CODE:src=./relative/path/to/code.js) -->\nThis content will be dynamically replaced with code from the file\n<!-- AUTO-GENERATED-CONTENT:END -->\n```\n\nDefault `MATCHWORD` is `AUTO-GENERATED-CONTENT`\n\n---\n\n### 🔀 REMOTE\n\nGet any remote Data and put in markdown\n\n**Options:**\n- `url`: The URL of the remote content to pull in\n\n**Example:**\n```md\n<!-- AUTO-GENERATED-CONTENT:START (REMOTE:url=http://url-to-raw-md-file.md) -->\nThis content will be dynamically replace from the remote url\n<!-- AUTO-GENERATED-CONTENT:END -->\n```\n\nDefault `MATCHWORD` is `AUTO-GENERATED-CONTENT`\n\n---\n\n### 🔀 TOC\n\nGenerate table of contents from markdown file\n\n**Options:**\n- `firsth1` - *boolean* - (optional): Show first h1 of doc in table of contents. Default `false`\n- `collapse` - *boolean* - (optional): Collapse the table of contents in a detail accordian. Default `false`\n- `collapseText` - *string* - (optional): Text the toc accordian summary\n- `excludeText` - *string* - (optional): Text to exclude in the table of contents. Default `Table of Contents`\n\n**Example:**\n```md\n<!-- AUTO-GENERATED-CONTENT:START (TOC) -->\ntoc will be generated here\n<!-- AUTO-GENERATED-CONTENT:END -->\n```\n\nDefault `MATCHWORD` is `AUTO-GENERATED-CONTENT`\n\n---\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END - Do not remove or modify this section -->\n\n## 🔌 Third Party Plugins\n\n* [wordcount](https://github.com/DavidWells/markdown-magic-wordcount/) - Add wordcount to markdown files\n* [github-contributors](https://github.com/DavidWells/markdown-magic-github-contributors) - List out the contributors of a given repository\n* [directory-tree](https://github.com/camacho/markdown-magic-directory-tree) - Add directory tree to markdown files\n* [install-command](https://github.com/camacho/markdown-magic-install-command) - Add install command to markdown files with `peerDependencies` included\n* [subpackage-list](https://github.com/camacho/markdown-magic-subpackage-list) - Add list of all subpackages (great for projects that use [Lerna](https://github.com/lerna/lerna))\n* [version-badge](https://github.com/camacho/markdown-magic-version-badge) - Add a badge with the latest version of the project\n* [template](https://github.com/camacho/markdown-magic-template) - Add Lodash template support\n* [dependency-table](https://github.com/camacho/markdown-magic-dependency-table) - Add a table of dependencies with links to their repositories, version information, and a short description\n* [package-scripts](https://github.com/camacho/markdown-magic-package-scripts) - Add a table of `package.json` scripts with descriptions\n* [prettier](https://github.com/camacho/markdown-magic-prettier) - Format code blocks with [`prettier`](https://github.com/prettier/prettier)\n* [engines](https://github.com/camacho/markdown-magic-engines) - Print engines list from `package.json`\n* [jsdoc](https://github.com/bradtaylorsf/markdown-magic-jsdoc) - Adds jsdoc comment support\n* [package-json](https://github.com/forresst/markdown-magic-package-json) - Add the package.json properties to markdown files\n\n## Adding Custom Transforms\n\nMarkdown Magic is extendable via plugins.\n\nPlugins allow developers to add new transforms to the `config.transforms` object. This allows for things like using different rendering engines, custom formatting, or any other logic you might want.\n\nPlugins run in order of registration.\n\nThe below code is used to generate **this markdown file** via the plugin system.\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (CODE:src=./examples/generate-readme.js) -->\n<!-- The below code snippet is automatically added from ./examples/generate-readme.js -->\n```js\nconst fs = require('fs')\nconst path = require('path')\nconst execSync = require('child_process').execSync\nconst markdownMagic = require('../index') // 'markdown-magic'\n\nconst config = {\n  matchWord: 'MD-MAGIC-EXAMPLE', // default matchWord is AUTO-GENERATED-CONTENT\n  transforms: {\n    /* Match <!-- AUTO-GENERATED-CONTENT:START (customTransform:optionOne=hi&optionOne=DUDE) --> */\n    customTransform(content, options) {\n      console.log('original content in comment block', content)\n      console.log('options defined on transform', options)\n      // options = { optionOne: hi, optionOne: DUDE}\n      return `This will replace all the contents of inside the comment ${options.optionOne}`\n    },\n    /* Match <!-- AUTO-GENERATED-CONTENT:START (RENDERDOCS:path=../file.js) --> */\n    RENDERDOCS(content, options) {\n      const fileContents = fs.readFileSync(options.path, 'utf8')\n      const docBlocs = require('dox').parseComments(fileContents, { raw: true, skipSingleStar: true })\n      let updatedContent = ''\n      docBlocs.forEach((data) => {\n        updatedContent += `${data.description.full}\\n\\n`\n      })\n      return updatedContent.replace(/^\\s+|\\s+$/g, '')\n    },\n    /* Match <!-- AUTO-GENERATED-CONTENT:START (pluginExample) --> */\n    pluginExample: require('./plugin-example')({ addNewLine: true }),\n    /* Plugins from npm */\n    // count: require('markdown-magic-wordcount'),\n    // github: require('markdown-magic-github-contributors')\n  }\n}\n\n/* This example callback automatically updates Readme.md and commits the changes */\nconst callback = function autoGitCommit(err, output) {\n  // output is array of file information\n  output.forEach(function(data) {\n    const mdPath = data.outputFilePath\n    if(!mdPath) return false\n    const gitAdd = execSync(`git add ${mdPath}`, {}, (error) => {\n      if (error) console.warn(error)\n      const msg = `${mdPath} automatically updated by markdown-magic`\n      const gitCommitCommand = `git commit -m '${msg}' --no-verify`\n      execSync(gitCommitCommand, {}, (err) => {\n        if (err) console.warn(err)\n        console.log('git commit automatically ran. Push up your changes!')\n      })\n    })\n  })\n}\n\nconst markdownPath = path.join(__dirname, '..', 'README.md')\nmarkdownMagic(markdownPath, config, callback)\n```\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END -->\n\n## Plugin Example\n\nPlugins must return a transform function with the following signature.\n\n```js\nreturn function myCustomTransform (content, options)\n```\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (CODE:src=./examples/plugin-example.js) -->\n<!-- The below code snippet is automatically added from ./examples/plugin-example.js -->\n```js\n/* Custom Transform Plugin example */\nconst merge = require('deepmerge')\nmodule.exports = function customPlugin(pluginOptions) {\n  // set plugin defaults\n  const defaultOptions = {\n    addNewLine: false\n  }\n  const userOptions = pluginOptions || {}\n  const pluginConfig = merge(defaultOptions, userOptions)\n  // return the transform function\n  return function myCustomTransform (content, options) {\n    const newLine = (pluginConfig.addNewLine) ? '\\n' : ''\n    const updatedContent = content + newLine\n    return updatedContent\n  }\n}\n```\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END -->\n\n[View the raw file](https://raw.githubusercontent.com/DavidWells/markdown-magic/master/README.md) file and run `npm run docs` to see this plugin run\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (pluginExample) DO not edit ⛔️ -->\nThis content is altered by the `pluginExample` plugin registered in `examples/generate-readme.js`\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END -->\n\n## Other usage examples\n\n- [Serverless Plugin Repo](https://github.com/serverless/plugins/blob/master/generate-docs.js) this example takes a `json` file and converts it into a github flavored markdown table\n\n## Custom Transform Demo\n\nView the raw source of this `README.md` file to see the comment block and see how the `customTransform` function in `examples/generate-readme.js` works\n\n<!-- ⛔️ MD-MAGIC-EXAMPLE:START (customTransform:optionOne=hi&optionOne=DUDE) - Do not remove or modify this section -->\nThis will replace all the contents of inside the comment DUDE\n<!-- ⛔️ MD-MAGIC-EXAMPLE:END - Do not remove or modify this section -->\n\n## Prior Art\n\nThis was inspired by [Kent C Dodds](https://twitter.com/kentcdodds) and [jfmengels](https://github.com/jfmengels)'s [all contributors cli](https://github.com/jfmengels/all-contributors-cli) project.\n\n<!-- MD-MAGIC-EXAMPLE:START (LOLZ)-->\nThis section was generated by the cli config markdown.config.js file\n<!-- MD-MAGIC-EXAMPLE:END (LOLZ)-->\n\n## License\n\n[MIT][mit] © [DavidWells][author]\n\n[npm-badge]:https://img.shields.io/npm/v/markdown-magic.svg?style=flat-square\n[npm-link]: http://www.npmjs.com/package/markdown-magic\n[mit]:      http://opensource.org/licenses/MIT\n[author]:   http://github.com/davidwells\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/DavidWells/markdown-magic/issues"},"_id":"markdown-magic@0.1.25","_shasum":"d044d90632b85ff1576a047da152852d53a8e55a","_resolved":"https://registry.npmjs.org/markdown-magic/-/markdown-magic-0.1.25.tgz","_from":"https://registry.npmjs.org/markdown-magic/-/markdown-magic-0.1.25.tgz"}