{"name":"ast-module-types","version":"2.5.0","description":"Collection of useful helper functions when trying to determine module type (CommonJS or AMD) properties of an AST node.","main":"index.js","scripts":{"test":"mocha test/test.js"},"repository":{"type":"git","url":"git+https://github.com/mrjoelkemp/node-ast-module-types.git"},"keywords":["esprima","module","type","define","require","factory"],"author":{"name":"Joel Kemp","email":"joel@mrjoelkemp.com","url":"http://www.mrjoelkemp.com/"},"license":"MIT","bugs":{"url":"https://github.com/mrjoelkemp/node-ast-module-types/issues"},"homepage":"https://github.com/mrjoelkemp/node-ast-module-types","devDependencies":{"mocha":"^2.0.1","node-source-walk":"^3.0.0"},"readme":"# ast-module-types [![travis](http://img.shields.io/travis/mrjoelkemp/ast-module-types.svg)](https://travis-ci.org/mrjoelkemp/node-ast-module-types/) [![npm](http://img.shields.io/npm/v/ast-module-types.svg)](https://npmjs.org/package/ast-module-types) [![npm](http://img.shields.io/npm/dm/ast-module-types.svg)](https://npmjs.org/package/ast-module-types)\n\nCollection of useful helper functions when trying to determine\nmodule type (CommonJS or AMD) properties of an AST node.\n\n**AST checks are based on the Esprima (Spidermonkey) format**\n\n`npm install ast-module-types`\n\n### API\n\nEach of these takes in a single AST node argument\nand returns a boolean.\n\n* `isDefine`: if node matches an AMD `define` function call (defining a module)\n* `isRequire`: if node matches a `require` function all (declaring a dependency)\n* `isTopLevelRequire`: if node matches a `require` at the very top of the file.\n* `isAMDDriverScriptRequire`: if node matches an AMD driver script's require call `require([deps], function)`\n* `isExports`: if the node matches CommonJS `module.exports` or `exports` (defining a module)\n\nDetecting the various forms of defining an AMD module\n\n* `isNamedForm`: if the node is a define call of the form: `define('name', [deps], func)`\n* `isDependencyForm`: if the node is a define call of the form: `define([deps], func)`\n* `isFactoryForm`: if the node is a define call of the form: `define(func(require))`\n* `isNoDependencyForm`: if the node is a define call of the form: `define({})`\n* `isREMForm`: if the node matches the form: `define(function(require, exports, module){});`\n\nES6 Types\n\n*All types abide by the [EStree spec](https://github.com/estree/estree/blob/master/es6.md)*\n\n* `isES6Import`: if the node is any of the es6 import forms\n* `isES6Export`: if the node is of any es6 export forms\n\n### Usage\n\n```javascript\nvar types = require('ast-module-types');\n\n// Assume node is some node of an AST that you parsed using esprima or esprima-fb\n// ...\n\nconsole.log(types.isDefine(node));\n```\n","readmeFilename":"Readme.md","_id":"ast-module-types@2.5.0","_shasum":"44b8bcd51684329a77f2af6b2587df9ea6b4d5ff","_resolved":"https://registry.npmjs.org/ast-module-types/-/ast-module-types-2.5.0.tgz","_from":"https://registry.npmjs.org/ast-module-types/-/ast-module-types-2.5.0.tgz"}