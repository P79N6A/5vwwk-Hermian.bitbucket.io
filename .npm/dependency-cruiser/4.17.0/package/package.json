{"name":"dependency-cruiser","version":"4.17.0","description":"Validate and visualize dependencies. With your rules. JavaScript, TypeScript, CoffeeScript. ES6, CommonJS, AMD.","keywords":["static analysis","circular","dependencies","typescript","javascript","coffeescript","ES6","ES2015","AMD","CommonJS","validation","spelunking"],"author":{"name":"Sander Verweij","url":"https://sverweij.github.io"},"contributors":[{"name":"Klaus Meinhardt","url":"https://github.com/ajafff"}],"license":"MIT","bin":{"dependency-cruiser":"bin/dependency-cruise","dependency-cruise":"bin/dependency-cruise","depcruise":"bin/dependency-cruise"},"main":"src/main/index.js","types":"types/dependency-cruiser.d.ts","files":["bin/","configs/**/*.js","configs/**/*.json","src/","!src/**/*.hbs","!src/**/*.md","!**/*.DS_Store","types/*.d.ts","LICENSE","package.json","README.md"],"scripts":{"build":"make dev-build","build:clean":"make clean","check":"npm-run-all build lint depcruise test:cover","check:full":"npm-run-all check test:glob test:integration","depcruise":"node ./bin/dependency-cruise --validate -- src bin/dependency-cruise test configs","depcruise:graph:dir":"node ./bin/dependency-cruise --validate --include-only '(^src|^[^/]+(js|json)$)' --output-type ddot bin src | dot -T png > tmp_deps.png","depcruise:graph:osage":"node ./bin/dependency-cruise --validate --include-only '(^src|^[^/]+(js|json)$)' --output-type dot bin src | osage -Gpack=16 -GpackMode=array2 -T svg > tmp_deps.svg","depcruise:graph:fdp":"node ./bin/dependency-cruise --validate --include-only '^src' --output-type dot bin src | fdp -GK=0.1 -Gsplines=ortho -T svg > tmp_deps.svg","depcruise:graph:doc":"npm-run-all --parallel depcruise:graph:doc:*","depcruise:graph:doc:html":"node ./bin/dependency-cruise --validate --include-only '(^src|^[^/]+(js|json)$)' --output-type dot bin src | dot -T svg -Gsplines=ortho | cat docs/assets/depcruise-graph-head.snippet.html - docs/assets/depcruise-graph-foot.snippet.html > docs/dependency-cruiser-dependency-graph.html","depcruise:graph:doc:png":"./bin/dependency-cruise --validate --do-not-follow report --include-only '(^src|^[^/]+(js|json)$)' --output-type dot bin/dependency-cruise | dot -Gdpi=192 -Gsplines=ortho -T png | pngquant - > doc/real-world-samples/dependency-cruiser-without-node_modules.png","lint":"eslint bin/dependency-cruise src test configs","lint:types":"tslint types/dependency-cruiser.d.ts","lint:fix":"eslint --fix bin/dependency-cruise src test configs","scm:push":"run-p --aggregate-output scm:push:*","scm:push:github":"run-p --aggregate-output scm:push:github:*","scm:push:github:commits":"git push","scm:push:github:tags":"git push --tags","scm:push:gitlab-mirror":"run-p --aggregate-output scm:push:gitlab-mirror:*","scm:push:gitlab-mirror:commits":"git push gitlab-mirror","scm:push:gitlab-mirror:tags":"git push --tags gitlab-mirror","scm:push:bitbucket-mirror":"run-p --aggregate-output scm:push:bitbucket-mirror:*","scm:push:bitbucket-mirror:commits":"git push bitbucket-mirror","scm:push:bitbucket-mirror:tags":"git push --tags bitbucket-mirror","scm:stage":"git add .","test":"mocha --timeout 4000 test/*/*.spec.js test/*/*/*.spec.js test/*/*/*/*.spec.js","test:cover":"nyc --check-coverage npm test","test:glob":"set -f && test \"`bin/dependency-cruise test/extract/fixtures/gather-globbing/packages/**/src/**/*.js | grep \"no dependency violations found\"`\" = \"âœ” no dependency violations found (6 modules cruised)\"","test:integration":"npm-run-all test:integration:cleanup test:integration:pack test:integration:copy test:integration:install test:integration:run test:integration:test test:integration:cleanup","test:integration:pack":"npm pack","test:integration:copy":"shx cp -r test/integration/yarn-pnp.template test/integration/yarn-pnp.testing-ground","test:integration:install":"cd test/integration/yarn-pnp.testing-ground && yarn && yarn add -D ../../../dependency-cruiser*.tgz","test:integration:run":"cd test/integration/yarn-pnp.testing-ground && yarn dependency-cruise:json","test:integration:test":"cd test/integration/yarn-pnp.testing-ground && yarn test","test:integration:cleanup":"shx rm -rf test/integration/yarn-pnp.testing-ground dependency-cruiser*.tgz","test:watch":"mocha --watch --watch-extensions=json --reporter=min test/*/*.spec.js test/*/*/*.spec.js test/*/*/*/*.spec.js","update-dependencies":"npm-run-all upem:update upem:install build:clean build lint:fix depcruise test:cover","upem:install":"npm install","upem:update":"npm outdated --json | upem","version":"npm-run-all build depcruise:graph:doc scm:stage"},"upem":{"donotup":["symlink-dir"]},"dependencies":{"acorn":"6.1.1","acorn-dynamic-import":"4.0.0","acorn-loose":"6.0.0","acorn-walk":"6.1.1","ajv":"6.10.0","chalk":"2.4.2","commander":"2.20.0","enhanced-resolve":"4.1.0","figures":"3.0.0","glob":"7.1.3","handlebars":"4.1.2","inquirer":"6.3.1","lodash":"4.17.11","pnp-webpack-plugin":"1.4.3","regexp-tree":"0.1.6","resolve":"1.10.1","semver":"6.0.0","semver-try-require":"2.0.4","strip-json-comments":"3.0.1","tsconfig-paths-webpack-plugin":"3.2.0"},"devDependencies":{"chai":"4.2.0","chai-json-schema":"1.5.0","coffeescript":"2.4.1","eslint":"5.16.0","eslint-plugin-import":"2.17.2","eslint-plugin-mocha":"5.3.0","eslint-plugin-node":"9.0.1","eslint-plugin-security":"1.4.0","intercept-stdout":"0.1.2","mocha":"6.1.4","normalize-newline":"3.0.0","npm-run-all":"4.1.5","nyc":"14.1.0","shx":"0.3.2","symlink-dir":"2.0.2","tslint":"5.16.0","typescript":"3.4.5","upem":"2.0.1","yarn":"1.15.2"},"repository":{"type":"git","url":"git+https://github.com/sverweij/dependency-cruiser.git"},"bugs":{"url":"https://github.com/sverweij/dependency-cruiser/issues"},"homepage":"https://github.com/sverweij/dependency-cruiser","nyc":{"statements":99.9,"branches":99.5,"functions":100,"lines":99.9,"exclude":["configs/**/*","test/**/*","src/**/*.template.js","src/cli/initConfig/getUserInput.js","coverage/**/*","tmp*","docs/**/*","doc/**/*"],"reporter":["text-summary","html","lcov"],"all":true},"eslintIgnore":["node_modules","coverage","tmp","src/**/*.template.js","test/integration/**","test/*/fixtures/**","test/*/*/fixtures/**","types/**"],"engines":{"node":">=6"},"supportedTranspilers":{"coffee-script":">=1.0.0 <2.0.0","coffeescript":">=1.0.0 <3.0.0","livescript":">=1.0.0 <2.0.0","typescript":">=2.0.0 <4.0.0"},"readme":"# Dependency cruiser ![Dependency cruiser](https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/ZKH-Dependency-recolored-160.png)\n\n_Validate and visualize dependencies. With your rules._ JavaScript. TypeScript. CoffeeScript. ES6, CommonJS, AMD.\n\n## What's this do?\n![Snazzy dot output to whet your appetite](https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/sample-dot-output.png)\n\n\nThis runs through the dependencies in any JavaScript, TypeScript, LiveScript or CoffeeScript project and ...\n  - ... **validates** them against (your own) [rules](./doc/rules-reference.md)\n  - ... **reports** violated rules\n    - in text (for your builds)\n    - in graphics (for your eyeballs)\n\nAs a side effect it can generate [**cool dependency graphs**](./doc/real-world-samples.md)\nyou can stick on the wall to impress your grandma.\n\n## How do I use it?\n\n### Install it\n- `npm install --save-dev dependency-cruiser` to use it as a validator in your project or...\n- `npm install --global dependency-cruiser` if you just want to to inspect multiple projects.\n\n### Show stuff to your grandma\nTo create a graph of the dependencies in your src folder, you'd run dependency\ncruiser with output type `dot` and run _GraphViz dot_ on the result. In\na one liner:\n\n```shell\ndepcruise --exclude \"^node_modules\" --output-type dot src | dot -T svg > dependencygraph.svg\n```\n\n- You can read more about what you can do with `--exclude` and other command line\n  options in the\n  [command line interface](./doc/cli.md)\n  documentation.\n- _[Real world samples](./doc/real-world-samples.md)_\n  contains dependency cruises of some of the most used projects on npm.\n\n### Validate things\n#### Declare some rules\nThe easy way to get you started:\n\n```shell\ndepcruise --init\n```\n\nThis will create a `.dependency-cruiser.json` with some rules that make sense\nin most projects (detecting **circular dependencies**, dependencies\n**missing** in package.json, **orphans**, production code relying on\ndev- or optionalDependencies, ...).\n\nStart adding your rules by tweaking that file.\n\nSample rule:\n```json\n{\n    \"forbidden\": [{\n        \"name\": \"not-to-test\",\n        \"comment\": \"don't allow dependencies from outside the test folder to test\",\n        \"severity\": \"error\",\n        \"from\": { \"pathNot\": \"^test\" },\n        \"to\": { \"path\": \"^test\" }\n    }]\n}\n```\n\n- To read more about writing rules check the\n  [writing rules](./doc/rules-tutorial.md) tutorial\n  or the [rules reference](./doc/rules-reference.md)\n- You can find the `--init-rules` set   [here](./doc/rules.starter.json)\n\n#### Report them\n```sh\ndepcruise --validate .dependency-cruiser.json src\n```\n\nThis will validate against your rules and shows any violations in an eslint-like format:\n\n![sample err output](https://raw.githubusercontent.com/sverweij/dependency-cruiser/master/doc/assets/sample-err-output.png)\n\nThere's more ways to report validations; in a graph (like the one on top of this\nreadme) or in a table.\n\n- Read more about the err, dot, csv and html reporters in the\n  [command line interface](./doc/cli.md)\n  documentation.\n- dependency-cruiser uses itself to check on itself in its own build process;\n  see the `decpruise` script in the\n  [package.json](https://github.com/sverweij/dependency-cruiser/blob/master/package.json#L12)\n\n## I want to know more!\nYou've come to the right place :-) :\n\n- Usage\n    - [Command line reference](./doc/cli.md)\n    - [Writing rules](./doc/rules-tutorial.md)\n    - [Rules reference](./doc/rules-reference.md)\n    - [FAQ](./doc/faq.md)\n- Hacking on dependency-cruiser\n    - [API](./doc/api.md)\n    - [Output format](./doc/output-format.md)\n    - [Adding support for other alt-js languages](./doc/faq.md#how-do-i-add-support-for-my-favorite-alt-js-language)\n    - [Adding other output formats](./doc/faq.md#how-do-i-add-a-new-output-format)\n- Other things\n    - [Road map](https://github.com/sverweij/dependency-cruiser/projects/1)\n    - [Contact](./doc/faq.md#contact)\n    - [Real world show cases](./doc/real-world-samples.md)\n    - [TypeScript, CoffeeScript and LiveScript support](./doc/faq.md)\n    - [Support for .jsx, .tsx, .csx/ .cjsx and .vue](./doc/faq.md#im-developing-in-react-and-use-jsx-how-do-i-get-that-to-work)\n    - [Webpack alias/ modules support](./doc/faq.md#does-this-work-with-webpack-configs-eg-alias-and-modules)\n\n## License\n[MIT](LICENSE)\n\n## Thanks\n- [Marijn Haverbeke](http://marijnhaverbeke.nl) and other people who\n  collaborated on [acorn](https://github.com/ternjs/acorn) -\n  the excellent JavaScript parser dependency-cruiser uses to infer\n  dependencies.\n\n## Build status\n[![build status](https://gitlab.com/sverweij/dependency-cruiser/badges/master/build.svg)](https://gitlab.com/sverweij/dependency-cruiser/builds)\n[![Build status](https://ci.appveyor.com/api/projects/status/u18tbeujml0knk08/branch/master?svg=true)](https://ci.appveyor.com/project/sverweij/dependency-cruiser/branch/master)\n[![Build Status](https://travis-ci.org/sverweij/dependency-cruiser.svg?branch=master)](https://travis-ci.org/sverweij/dependency-cruiser)\n[![coverage](https://gitlab.com/sverweij/dependency-cruiser/badges/master/coverage.svg)](https://gitlab.com/sverweij/dependency-cruiser/builds)\n[![Maintainability](https://api.codeclimate.com/v1/badges/93035ef5fba33901d479/maintainability)](https://codeclimate.com/github/sverweij/dependency-cruiser/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/93035ef5fba33901d479/test_coverage)](https://codeclimate.com/github/sverweij/dependency-cruiser/test_coverage)\n[![total downloads on npm](https://img.shields.io/npm/dt/dependency-cruiser.svg?maxAge=2591999)](https://npmjs.com/package/dependency-cruiser)\n\nMade with :metal: in Holland.\n","readmeFilename":"README.md","_id":"dependency-cruiser@4.17.0","_shasum":"6626a5711f832a0686b340c26ffcafd7c532bb2b","_resolved":"https://registry.npmjs.org/dependency-cruiser/-/dependency-cruiser-4.17.0.tgz","_from":"https://registry.npmjs.org/dependency-cruiser/-/dependency-cruiser-4.17.0.tgz"}