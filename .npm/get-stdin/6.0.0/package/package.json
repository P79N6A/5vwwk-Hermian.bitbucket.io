{"name":"get-stdin","version":"6.0.0","description":"Get stdin as a string or buffer","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/get-stdin.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava test.js test-buffer.js && echo unicorns | node test-real.js"},"files":["index.js"],"keywords":["std","stdin","stdio","concat","buffer","stream","process","read"],"devDependencies":{"ava":"*","xo":"*"},"readme":"# get-stdin [![Build Status](https://travis-ci.org/sindresorhus/get-stdin.svg?branch=master)](https://travis-ci.org/sindresorhus/get-stdin)\n\n> Get [stdin](https://nodejs.org/api/process.html#process_process_stdin) as a string or buffer\n\n\n## Install\n\n```\n$ npm install get-stdin\n```\n\n\n## Usage\n\n```js\n// example.js\nconst getStdin = require('get-stdin');\n\ngetStdin().then(str => {\n\tconsole.log(str);\n\t//=> 'unicorns'\n});\n```\n\n```\n$ echo unicorns | node example.js\nunicorns\n```\n\n\n## API\n\nBoth methods returns a promise that is resolved when the `end` event fires on the `stdin` stream, indicating that there is no more data to be read.\n\n### getStdin()\n\nGet `stdin` as a `string`.\n\nIn a TTY context, a promise that resolves to an empty string is returned.\n\n### getStdin.buffer()\n\nGet `stdin` as a `Buffer`.\n\nIn a TTY context, a promise that resolves to an empty buffer is returned.\n\n\n## Related\n\n- [get-stream](https://github.com/sindresorhus/get-stream) - Get a stream as a string or buffer\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/sindresorhus/get-stdin/issues"},"homepage":"https://github.com/sindresorhus/get-stdin#readme","_id":"get-stdin@6.0.0","_shasum":"9e09bf712b360ab9225e812048f71fde9c89657b","_resolved":"https://registry.npmjs.org/get-stdin/-/get-stdin-6.0.0.tgz","_from":"https://registry.npmjs.org/get-stdin/-/get-stdin-6.0.0.tgz"}