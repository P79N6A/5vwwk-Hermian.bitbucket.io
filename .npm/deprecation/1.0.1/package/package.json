{"name":"deprecation","version":"1.0.1","description":"Log a deprecation message with stack","main":"index.js","scripts":{"test":"node test.js"},"keywords":["deprecate","deprecated","deprecation"],"author":{"name":"Gregor Martynus"},"license":"ISC","repository":{"type":"git","url":"git+https://github.com/gr2m/deprecation.git"},"devDependencies":{"semantic-release":"^15.13.3"},"readme":"# deprecation\n\n> Log a deprecation message with stack\n\n![build](https://action-badges.now.sh/gr2m/deprecation)\n\n## Usage\n\n```js\nconst Deprecation = require('deprecation')\n\nfunction foo () {\n  bar()\n}\n\nfunction bar () {\n  baz() \n}\n\nfunction baz () {\n  console.warn(new Deprecation('[my-lib] foo() is deprecated, use bar()'))\n}\n\nfoo()\n// { Deprecation: [my-lib] foo() is deprecated, use bar()\n//     at baz (/path/to/file.js:12:15)\n//     at bar (/path/to/file.js:8:3)\n//     at foo (/path/to/file.js:4:3)\n```\n\nTo log a deprecation message only once, you can use the [once](https://www.npmjs.com/package/once) module.\n\n```js\nconst Deprecation = require('deprecation')\nconst once = require('once')\n\nconst deprecateFoo = once(console.warn)\n\nfunction foo () {\n  deprecateFoo(new Deprecation('[my-lib] foo() is deprecated, use bar()'))\n}\n\nfoo()\nfoo() // logs nothing\n```\n\n## License\n\n[ISC](LICENSE)","readmeFilename":"README.md","bugs":{"url":"https://github.com/gr2m/deprecation/issues"},"homepage":"https://github.com/gr2m/deprecation#readme","_id":"deprecation@1.0.1","_shasum":"2df79b79005752180816b7b6e079cbd80490d711","_resolved":"https://registry.npmjs.org/deprecation/-/deprecation-1.0.1.tgz","_from":"https://registry.npmjs.org/deprecation/-/deprecation-1.0.1.tgz"}