{"name":"module-definition","version":"3.2.0","description":"Determines if a file is using a CommonJS or AMD module definition","main":"index.js","bin":{"module-definition":"bin/module-definition.js"},"scripts":{"test":"jscs test/test.js index.js bin/module-definition.js && mocha test/test.js"},"repository":{"type":"git","url":"git+https://github.com/mrjoelkemp/module-definition.git"},"author":{"name":"Joel Kemp","email":"joel@mrjoelkemp.com","url":"http://www.mrjoelkemp.com/"},"license":"MIT","homepage":"https://github.com/mrjoelkemp/module-definition","dependencies":{"ast-module-types":"^2.4.0","node-source-walk":"^4.0.0"},"engines":{"node":">=6.0"},"devDependencies":{"jscs":"^3.0.7","jscs-preset-mrjoelkemp":"~2.0.0","mocha":"^5.2.0","unionfs":"^3.0.2","memfs":"^2.14.1"},"readme":"# module-definition [![npm](http://img.shields.io/npm/v/module-definition.svg)](https://npmjs.org/package/module-definition) [![npm](http://img.shields.io/npm/dm/module-definition.svg)](https://npmjs.org/package/module-definition)\n\nDetermines the module definition type (CommonJS, AMD, ES6, or none) for a given JavaScript file\nby walking through the AST.\n\n`npm install module-definition`\n\n### Usage\n\n```javascript\nvar getModuleType = require('module-definition');\n\n// Async\ngetModuleType('myscript.js', function (err, type) {\n  console.log(type);\n});\n\n// Sync\nvar type = getModuleType.sync('myscript.js');\nconsole.log(type);\n\n// From source (string or an AST)\nvar type = getModuleType.fromSource('define({foo: \"foo\"});');\nconsole.log(type);\n```\n\nPasses one of the following strings to the given callback or returns the string in sync api:\n\n* amd\n* commonjs\n* es6\n* none\n\n* You may also pass an AST to `fromSource` to avoid an internal parsing of the source\n\nWhen specifying a filename, using the sync or async api, you can also provide an `options` object with an alternative `fs` implementation used to read the source file with.\n\n```javascript\nvar myFs = GetFs();\nvar options = {fileSystem: myFs}\n\n// Async\ngetModuleType('myscript.js', function (err, type) {\n  console.log(type);\n}, options);\n\n// Sync\nvar type = getModuleType.sync('myscript.js', options);\n\n```\n\nVia shell command (requires a global install: `npm install -g module-definition`)\n```\nmodule-definition filename\n```\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/mrjoelkemp/module-definition/issues"},"_id":"module-definition@3.2.0","_shasum":"a1741d5ddf60d76c60d5b1f41ba8744ba08d3ef4","_resolved":"https://registry.npmjs.org/module-definition/-/module-definition-3.2.0.tgz","_from":"https://registry.npmjs.org/module-definition/-/module-definition-3.2.0.tgz"}